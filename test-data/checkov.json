{
    "check_type": "terraform",
    "results": {
        "passed_checks": [
            {
                "check_id": "CKV_AZURE_36",
                "check_name": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        13,
                        "resource \"azurerm_storage_account\" \"example\" {\n"
                    ],
                    [
                        14,
                        "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        15,
                        "  resource_group_name      = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  location                 = azurerm_resource_group.example.location\n"
                    ],
                    [
                        17,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        18,
                        "  account_replication_type = \"GRS\"\n"
                    ],
                    [
                        19,
                        "  queue_properties {\n"
                    ],
                    [
                        20,
                        "    logging {\n"
                    ],
                    [
                        21,
                        "      delete                = false\n"
                    ],
                    [
                        22,
                        "      read                  = false\n"
                    ],
                    [
                        23,
                        "      write                 = true\n"
                    ],
                    [
                        24,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        25,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        26,
                        "    }\n"
                    ],
                    [
                        27,
                        "    hour_metrics {\n"
                    ],
                    [
                        28,
                        "      enabled               = true\n"
                    ],
                    [
                        29,
                        "      include_apis          = true\n"
                    ],
                    [
                        30,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        31,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        32,
                        "    }\n"
                    ],
                    [
                        33,
                        "    minute_metrics {\n"
                    ],
                    [
                        34,
                        "      enabled               = true\n"
                    ],
                    [
                        35,
                        "      include_apis          = true\n"
                    ],
                    [
                        36,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        37,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        38,
                        "    }\n"
                    ],
                    [
                        39,
                        "  }\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    13,
                    40
                ],
                "resource": "azurerm_storage_account.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tgsa${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_storage_account/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountAzureServicesAccessEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access"
            },
            {
                "check_id": "CKV_AZURE_35",
                "check_name": "Ensure default network access rule for Storage Accounts is set to deny",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        42,
                        "resource \"azurerm_storage_account_network_rules\" \"test\" {\n"
                    ],
                    [
                        43,
                        "  resource_group_name  = azurerm_resource_group.example.name\n"
                    ],
                    [
                        44,
                        "  storage_account_name = azurerm_storage_account.example.name\n"
                    ],
                    [
                        45,
                        "\n"
                    ],
                    [
                        46,
                        "  default_action = \"Deny\"\n"
                    ],
                    [
                        47,
                        "  ip_rules       = [\"127.0.0.1\"]\n"
                    ],
                    [
                        48,
                        "  bypass         = [\"Metrics\"]\n"
                    ],
                    [
                        49,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    42,
                    49
                ],
                "resource": "azurerm_storage_account_network_rules.test",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountDefaultNetworkAccessDeny",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny"
            },
            {
                "check_id": "CKV_AZURE_11",
                "check_name": "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"azurerm_sql_firewall_rule\" \"example\" {\n"
                    ],
                    [
                        2,
                        "  name                = \"terragoat-firewall-rule-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        4,
                        "  server_name         = azurerm_sql_server.example.name\n"
                    ],
                    [
                        5,
                        "  start_ip_address    = \"10.0.17.62\"\n"
                    ],
                    [
                        6,
                        "  end_ip_address      = \"10.0.17.62\"\n"
                    ],
                    [
                        7,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    1,
                    7
                ],
                "resource": "azurerm_sql_firewall_rule.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-firewall-rule-${var.environment}",
                                "definition_path": "resource/0/azurerm_sql_firewall_rule/example/name/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/0/azurerm_sql_firewall_rule/example/server_name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.SQLServerNoPublicAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_4"
            },
            {
                "check_id": "CKV_AZURE_31",
                "check_name": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        69,
                        "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {\n"
                    ],
                    [
                        70,
                        "  name                = \"connection_throttling\"\n"
                    ],
                    [
                        71,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        72,
                        "  server_name         = azurerm_postgresql_server.example.name\n"
                    ],
                    [
                        73,
                        "  value               = \"off\"\n"
                    ],
                    [
                        74,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    69,
                    74
                ],
                "resource": "azurerm_postgresql_configuration.thrtottling_config",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerLogConnectionsEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_12"
            },
            {
                "check_id": "CKV_AZURE_30",
                "check_name": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        69,
                        "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {\n"
                    ],
                    [
                        70,
                        "  name                = \"connection_throttling\"\n"
                    ],
                    [
                        71,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        72,
                        "  server_name         = azurerm_postgresql_server.example.name\n"
                    ],
                    [
                        73,
                        "  value               = \"off\"\n"
                    ],
                    [
                        74,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    69,
                    74
                ],
                "resource": "azurerm_postgresql_configuration.thrtottling_config",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerLogCheckpointsEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_11"
            },
            {
                "check_id": "CKV_AZURE_31",
                "check_name": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        76,
                        "resource \"azurerm_postgresql_configuration\" \"example\" {\n"
                    ],
                    [
                        77,
                        "  name                = \"log_checkpoints\"\n"
                    ],
                    [
                        78,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        79,
                        "  server_name         = azurerm_postgresql_server.example.name\n"
                    ],
                    [
                        80,
                        "  value               = \"off\"\n"
                    ],
                    [
                        81,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    76,
                    81
                ],
                "resource": "azurerm_postgresql_configuration.example",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerLogConnectionsEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_12"
            },
            {
                "check_id": "CKV_AZURE_32",
                "check_name": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        76,
                        "resource \"azurerm_postgresql_configuration\" \"example\" {\n"
                    ],
                    [
                        77,
                        "  name                = \"log_checkpoints\"\n"
                    ],
                    [
                        78,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        79,
                        "  server_name         = azurerm_postgresql_server.example.name\n"
                    ],
                    [
                        80,
                        "  value               = \"off\"\n"
                    ],
                    [
                        81,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    76,
                    81
                ],
                "resource": "azurerm_postgresql_configuration.example",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerConnectionThrottlingEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_13"
            },
            {
                "check_id": "CKV_AZURE_50",
                "check_name": "Ensure Virtual Machine Extensions are not Installed",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "allow_extension_operations"
                    ]
                },
                "code_block": [
                    [
                        9,
                        "resource azurerm_linux_virtual_machine \"linux_machine\" {\n"
                    ],
                    [
                        10,
                        "  admin_username                  = \"terragoat-linux\"\n"
                    ],
                    [
                        11,
                        "  admin_password                  = random_string.password.result\n"
                    ],
                    [
                        12,
                        "  location                        = var.location\n"
                    ],
                    [
                        13,
                        "  name                            = \"terragoat-linux\"\n"
                    ],
                    [
                        14,
                        "  network_interface_ids           = [azurerm_network_interface.ni_linux.id]\n"
                    ],
                    [
                        15,
                        "  resource_group_name             = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  size                            = \"Standard_F2\"\n"
                    ],
                    [
                        17,
                        "  disable_password_authentication = false\n"
                    ],
                    [
                        18,
                        "  source_image_reference {\n"
                    ],
                    [
                        19,
                        "    publisher = \"Canonical\"\n"
                    ],
                    [
                        20,
                        "    offer     = \"UbuntuServer\"\n"
                    ],
                    [
                        21,
                        "    sku       = \"16.04-LTS\"\n"
                    ],
                    [
                        22,
                        "    version   = \"latest\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "  os_disk {\n"
                    ],
                    [
                        25,
                        "    caching              = \"ReadWrite\"\n"
                    ],
                    [
                        26,
                        "    storage_account_type = \"Standard_LRS\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  tags = {\n"
                    ],
                    [
                        30,
                        "    terragoat   = true\n"
                    ],
                    [
                        31,
                        "    environment = var.environment\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/instance.tf",
                "repo_file_path": "/terraform/azure/instance.tf",
                "file_line_range": [
                    9,
                    33
                ],
                "resource": "azurerm_linux_virtual_machine.linux_machine",
                "evaluations": {
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_linux_virtual_machine/linux_machine/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AzureInstanceExtensions",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_14"
            },
            {
                "check_id": "CKV_AZURE_15",
                "check_name": "Ensure web app is using the latest version of TLS encryption",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        23,
                        "resource azurerm_app_service \"app-service2\" {\n"
                    ],
                    [
                        24,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        25,
                        "  location            = var.location\n"
                    ],
                    [
                        26,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        27,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        28,
                        "  https_only          = true\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  auth_settings {\n"
                    ],
                    [
                        31,
                        "    enabled = false\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    23,
                    33
                ],
                "resource": "azurerm_app_service.app-service2",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceMinTLSVersion",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_6"
            },
            {
                "check_id": "CKV_AZURE_14",
                "check_name": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "https_only/[0]"
                    ]
                },
                "code_block": [
                    [
                        23,
                        "resource azurerm_app_service \"app-service2\" {\n"
                    ],
                    [
                        24,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        25,
                        "  location            = var.location\n"
                    ],
                    [
                        26,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        27,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        28,
                        "  https_only          = true\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  auth_settings {\n"
                    ],
                    [
                        31,
                        "    enabled = false\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    23,
                    33
                ],
                "resource": "azurerm_app_service.app-service2",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceHTTPSOnly",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_5"
            },
            {
                "check_id": "CKV_AWS_61",
                "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_iam_role\" \"iam_for_lambda\" {\n"
                    ],
                    [
                        2,
                        "  name = \"${local.resource_prefix.value}-analysis-lambda\"\n"
                    ],
                    [
                        3,
                        "\n"
                    ],
                    [
                        4,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        5,
                        "{\n"
                    ],
                    [
                        6,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        7,
                        "  \"Statement\": [\n"
                    ],
                    [
                        8,
                        "    {\n"
                    ],
                    [
                        9,
                        "      \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        10,
                        "      \"Principal\": {\n"
                    ],
                    [
                        11,
                        "        \"Service\": \"lambda.amazonaws.com\"\n"
                    ],
                    [
                        12,
                        "      },\n"
                    ],
                    [
                        13,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        14,
                        "      \"Sid\": \"\"\n"
                    ],
                    [
                        15,
                        "    }\n"
                    ],
                    [
                        16,
                        "  ]\n"
                    ],
                    [
                        17,
                        "}\n"
                    ],
                    [
                        18,
                        "EOF\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/lambda.tf",
                "repo_file_path": "/terraform/aws/lambda.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "aws_iam_role.iam_for_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
            },
            {
                "check_id": "CKV_AWS_60",
                "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_iam_role\" \"iam_for_lambda\" {\n"
                    ],
                    [
                        2,
                        "  name = \"${local.resource_prefix.value}-analysis-lambda\"\n"
                    ],
                    [
                        3,
                        "\n"
                    ],
                    [
                        4,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        5,
                        "{\n"
                    ],
                    [
                        6,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        7,
                        "  \"Statement\": [\n"
                    ],
                    [
                        8,
                        "    {\n"
                    ],
                    [
                        9,
                        "      \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        10,
                        "      \"Principal\": {\n"
                    ],
                    [
                        11,
                        "        \"Service\": \"lambda.amazonaws.com\"\n"
                    ],
                    [
                        12,
                        "      },\n"
                    ],
                    [
                        13,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        14,
                        "      \"Sid\": \"\"\n"
                    ],
                    [
                        15,
                        "    }\n"
                    ],
                    [
                        16,
                        "  ]\n"
                    ],
                    [
                        17,
                        "}\n"
                    ],
                    [
                        18,
                        "EOF\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/lambda.tf",
                "repo_file_path": "/terraform/aws/lambda.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "aws_iam_role.iam_for_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        81,
                        "  name   = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        82,
                        "  vpc_id = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        83,
                        "\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    80,
                    88
                ],
                "resource": "aws_security_group.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-rds-sg",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_24",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        81,
                        "  name   = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        82,
                        "  vpc_id = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        83,
                        "\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    80,
                    88
                ],
                "resource": "aws_security_group.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-rds-sg",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
            },
            {
                "check_id": "CKV_AWS_25",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        81,
                        "  name   = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        82,
                        "  vpc_id = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        83,
                        "\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    80,
                    88
                ],
                "resource": "aws_security_group.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-rds-sg",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_2"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        90,
                        "resource \"aws_security_group_rule\" \"ingress\" {\n"
                    ],
                    [
                        91,
                        "  type              = \"ingress\"\n"
                    ],
                    [
                        92,
                        "  from_port         = \"3306\"\n"
                    ],
                    [
                        93,
                        "  to_port           = \"3306\"\n"
                    ],
                    [
                        94,
                        "  protocol          = \"tcp\"\n"
                    ],
                    [
                        95,
                        "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]\n"
                    ],
                    [
                        96,
                        "  security_group_id = aws_security_group.default.id\n"
                    ],
                    [
                        97,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    90,
                    97
                ],
                "resource": "aws_security_group_rule.ingress",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_24",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        90,
                        "resource \"aws_security_group_rule\" \"ingress\" {\n"
                    ],
                    [
                        91,
                        "  type              = \"ingress\"\n"
                    ],
                    [
                        92,
                        "  from_port         = \"3306\"\n"
                    ],
                    [
                        93,
                        "  to_port           = \"3306\"\n"
                    ],
                    [
                        94,
                        "  protocol          = \"tcp\"\n"
                    ],
                    [
                        95,
                        "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]\n"
                    ],
                    [
                        96,
                        "  security_group_id = aws_security_group.default.id\n"
                    ],
                    [
                        97,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    90,
                    97
                ],
                "resource": "aws_security_group_rule.ingress",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
            },
            {
                "check_id": "CKV_AWS_25",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        90,
                        "resource \"aws_security_group_rule\" \"ingress\" {\n"
                    ],
                    [
                        91,
                        "  type              = \"ingress\"\n"
                    ],
                    [
                        92,
                        "  from_port         = \"3306\"\n"
                    ],
                    [
                        93,
                        "  to_port           = \"3306\"\n"
                    ],
                    [
                        94,
                        "  protocol          = \"tcp\"\n"
                    ],
                    [
                        95,
                        "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]\n"
                    ],
                    [
                        96,
                        "  security_group_id = aws_security_group.default.id\n"
                    ],
                    [
                        97,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    90,
                    97
                ],
                "resource": "aws_security_group_rule.ingress",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_2"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        99,
                        "resource \"aws_security_group_rule\" \"egress\" {\n"
                    ],
                    [
                        100,
                        "  type              = \"egress\"\n"
                    ],
                    [
                        101,
                        "  from_port         = 0\n"
                    ],
                    [
                        102,
                        "  to_port           = 0\n"
                    ],
                    [
                        103,
                        "  protocol          = \"-1\"\n"
                    ],
                    [
                        104,
                        "  cidr_blocks       = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        105,
                        "  security_group_id = \"${aws_security_group.default.id}\"\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    99,
                    106
                ],
                "resource": "aws_security_group_rule.egress",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_61",
                "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        115,
                        "resource \"aws_iam_role\" \"ec2role\" {\n"
                    ],
                    [
                        116,
                        "  name = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        117,
                        "  path = \"/\"\n"
                    ],
                    [
                        118,
                        "\n"
                    ],
                    [
                        119,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        120,
                        "{\n"
                    ],
                    [
                        121,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        122,
                        "    \"Statement\": [\n"
                    ],
                    [
                        123,
                        "        {\n"
                    ],
                    [
                        124,
                        "            \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        125,
                        "            \"Principal\": {\n"
                    ],
                    [
                        126,
                        "               \"Service\": \"ec2.amazonaws.com\"\n"
                    ],
                    [
                        127,
                        "            },\n"
                    ],
                    [
                        128,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        129,
                        "            \"Sid\": \"\"\n"
                    ],
                    [
                        130,
                        "        }\n"
                    ],
                    [
                        131,
                        "    ]\n"
                    ],
                    [
                        132,
                        "}\n"
                    ],
                    [
                        133,
                        "EOF\n"
                    ],
                    [
                        134,
                        "\n"
                    ],
                    [
                        135,
                        "  tags = {\n"
                    ],
                    [
                        136,
                        "    Name        = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        137,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        138,
                        "  }\n"
                    ],
                    [
                        139,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    115,
                    139
                ],
                "resource": "aws_iam_role.ec2role",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-role",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
            },
            {
                "check_id": "CKV_AWS_60",
                "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        115,
                        "resource \"aws_iam_role\" \"ec2role\" {\n"
                    ],
                    [
                        116,
                        "  name = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        117,
                        "  path = \"/\"\n"
                    ],
                    [
                        118,
                        "\n"
                    ],
                    [
                        119,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        120,
                        "{\n"
                    ],
                    [
                        121,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        122,
                        "    \"Statement\": [\n"
                    ],
                    [
                        123,
                        "        {\n"
                    ],
                    [
                        124,
                        "            \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        125,
                        "            \"Principal\": {\n"
                    ],
                    [
                        126,
                        "               \"Service\": \"ec2.amazonaws.com\"\n"
                    ],
                    [
                        127,
                        "            },\n"
                    ],
                    [
                        128,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        129,
                        "            \"Sid\": \"\"\n"
                    ],
                    [
                        130,
                        "        }\n"
                    ],
                    [
                        131,
                        "    ]\n"
                    ],
                    [
                        132,
                        "}\n"
                    ],
                    [
                        133,
                        "EOF\n"
                    ],
                    [
                        134,
                        "\n"
                    ],
                    [
                        135,
                        "  tags = {\n"
                    ],
                    [
                        136,
                        "    Name        = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        137,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        138,
                        "  }\n"
                    ],
                    [
                        139,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    115,
                    139
                ],
                "resource": "aws_iam_role.ec2role",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-role",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
            },
            {
                "check_id": "CKV_AWS_62",
                "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        141,
                        "resource \"aws_iam_role_policy\" \"ec2policy\" {\n"
                    ],
                    [
                        142,
                        "  name = \"${local.resource_prefix.value}-policy\"\n"
                    ],
                    [
                        143,
                        "  role = aws_iam_role.ec2role.id\n"
                    ],
                    [
                        144,
                        "\n"
                    ],
                    [
                        145,
                        "  policy = <<EOF\n"
                    ],
                    [
                        146,
                        "{\n"
                    ],
                    [
                        147,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        148,
                        "  \"Statement\": [\n"
                    ],
                    [
                        149,
                        "    {\n"
                    ],
                    [
                        150,
                        "      \"Action\": [\n"
                    ],
                    [
                        151,
                        "        \"s3:*\",\n"
                    ],
                    [
                        152,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        153,
                        "        \"rds:*\"\n"
                    ],
                    [
                        154,
                        "      ],\n"
                    ],
                    [
                        155,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        156,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        157,
                        "    }\n"
                    ],
                    [
                        158,
                        "  ]\n"
                    ],
                    [
                        159,
                        "}\n"
                    ],
                    [
                        160,
                        "EOF\n"
                    ],
                    [
                        161,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    141,
                    161
                ],
                "resource": "aws_iam_role_policy.ec2policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_47"
            },
            {
                "check_id": "CKV_AWS_63",
                "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        141,
                        "resource \"aws_iam_role_policy\" \"ec2policy\" {\n"
                    ],
                    [
                        142,
                        "  name = \"${local.resource_prefix.value}-policy\"\n"
                    ],
                    [
                        143,
                        "  role = aws_iam_role.ec2role.id\n"
                    ],
                    [
                        144,
                        "\n"
                    ],
                    [
                        145,
                        "  policy = <<EOF\n"
                    ],
                    [
                        146,
                        "{\n"
                    ],
                    [
                        147,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        148,
                        "  \"Statement\": [\n"
                    ],
                    [
                        149,
                        "    {\n"
                    ],
                    [
                        150,
                        "      \"Action\": [\n"
                    ],
                    [
                        151,
                        "        \"s3:*\",\n"
                    ],
                    [
                        152,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        153,
                        "        \"rds:*\"\n"
                    ],
                    [
                        154,
                        "      ],\n"
                    ],
                    [
                        155,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        156,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        157,
                        "    }\n"
                    ],
                    [
                        158,
                        "  ]\n"
                    ],
                    [
                        159,
                        "}\n"
                    ],
                    [
                        160,
                        "EOF\n"
                    ],
                    [
                        161,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    141,
                    161
                ],
                "resource": "aws_iam_role_policy.ec2policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_48"
            },
            {
                "check_id": "CKV_AWS_46",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        178,
                        "resource \"aws_instance\" \"db_app\" {\n"
                    ],
                    [
                        179,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        180,
                        "  ami                  = data.aws_ami.amazon-linux-2.id\n"
                    ],
                    [
                        181,
                        "  instance_type        = \"t2.nano\"\n"
                    ],
                    [
                        182,
                        "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n"
                    ],
                    [
                        183,
                        "\n"
                    ],
                    [
                        184,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        185,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        186,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        187,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        188,
                        "#! /bin/bash\n"
                    ],
                    [
                        189,
                        "### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\n"
                    ],
                    [
                        190,
                        "sudo yum -y update\n"
                    ],
                    [
                        191,
                        "sudo yum -y install httpd php php-mysqlnd\n"
                    ],
                    [
                        192,
                        "sudo systemctl enable httpd \n"
                    ],
                    [
                        193,
                        "sudo systemctl start httpd\n"
                    ],
                    [
                        194,
                        "\n"
                    ],
                    [
                        195,
                        "sudo mkdir /var/www/inc\n"
                    ],
                    [
                        196,
                        "cat << EnD > /tmp/dbinfo.inc\n"
                    ],
                    [
                        197,
                        "<?php\n"
                    ],
                    [
                        198,
                        "define('DB_SERVER', '${aws_db_instance.default.endpoint}');\n"
                    ],
                    [
                        199,
                        "define('DB_USERNAME', '${aws_db_instance.default.username}');\n"
                    ],
                    [
                        200,
                        "define('DB_PASSWORD', '${var.password}');\n"
                    ],
                    [
                        201,
                        "define('DB_DATABASE', '${aws_db_instance.default.name}');\n"
                    ],
                    [
                        202,
                        "?>\n"
                    ],
                    [
                        203,
                        "EnD\n"
                    ],
                    [
                        204,
                        "sudo mv /tmp/dbinfo.inc /var/www/inc \n"
                    ],
                    [
                        205,
                        "sudo chown root:root /var/www/inc/dbinfo.inc\n"
                    ],
                    [
                        206,
                        "\n"
                    ],
                    [
                        207,
                        "cat << EnD > /tmp/index.php\n"
                    ],
                    [
                        208,
                        "<?php include \"../inc/dbinfo.inc\"; ?>\n"
                    ],
                    [
                        209,
                        "<html>\n"
                    ],
                    [
                        210,
                        "<body>\n"
                    ],
                    [
                        211,
                        "<h1>Sample page</h1>\n"
                    ],
                    [
                        212,
                        "<?php\n"
                    ],
                    [
                        213,
                        "\n"
                    ],
                    [
                        214,
                        "  /* Connect to MySQL and select the database. */\n"
                    ],
                    [
                        215,
                        "  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n"
                    ],
                    [
                        218,
                        "\n"
                    ],
                    [
                        219,
                        "  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        220,
                        "\n"
                    ],
                    [
                        221,
                        "  /* Ensure that the EMPLOYEES table exists. */\n"
                    ],
                    [
                        222,
                        "  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        223,
                        "\n"
                    ],
                    [
                        224,
                        "  /* If input fields are populated, add a row to the EMPLOYEES table. */\n"
                    ],
                    [
                        225,
                        "  \\$employee_name = htmlentities(\\$_POST['NAME']);\n"
                    ],
                    [
                        226,
                        "  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n"
                    ],
                    [
                        227,
                        "\n"
                    ],
                    [
                        228,
                        "  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n"
                    ],
                    [
                        229,
                        "    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n"
                    ],
                    [
                        230,
                        "  }\n"
                    ],
                    [
                        231,
                        "?>\n"
                    ],
                    [
                        232,
                        "\n"
                    ],
                    [
                        233,
                        "<!-- Input form -->\n"
                    ],
                    [
                        234,
                        "<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n"
                    ],
                    [
                        235,
                        "  <table border=\"0\">\n"
                    ],
                    [
                        236,
                        "    <tr>\n"
                    ],
                    [
                        237,
                        "      <td>NAME</td>\n"
                    ],
                    [
                        238,
                        "      <td>ADDRESS</td>\n"
                    ],
                    [
                        239,
                        "    </tr>\n"
                    ],
                    [
                        240,
                        "    <tr>\n"
                    ],
                    [
                        241,
                        "      <td>\n"
                    ],
                    [
                        242,
                        "        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n"
                    ],
                    [
                        243,
                        "      </td>\n"
                    ],
                    [
                        244,
                        "      <td>\n"
                    ],
                    [
                        245,
                        "        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n"
                    ],
                    [
                        246,
                        "      </td>\n"
                    ],
                    [
                        247,
                        "      <td>\n"
                    ],
                    [
                        248,
                        "        <input type=\"submit\" value=\"Add Data\" />\n"
                    ],
                    [
                        249,
                        "      </td>\n"
                    ],
                    [
                        250,
                        "    </tr>\n"
                    ],
                    [
                        251,
                        "  </table>\n"
                    ],
                    [
                        252,
                        "</form>\n"
                    ],
                    [
                        253,
                        "\n"
                    ],
                    [
                        254,
                        "<!-- Display table data. -->\n"
                    ],
                    [
                        255,
                        "<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n"
                    ],
                    [
                        256,
                        "  <tr>\n"
                    ],
                    [
                        257,
                        "    <td>ID</td>\n"
                    ],
                    [
                        258,
                        "    <td>NAME</td>\n"
                    ],
                    [
                        259,
                        "    <td>ADDRESS</td>\n"
                    ],
                    [
                        260,
                        "  </tr>\n"
                    ],
                    [
                        261,
                        "\n"
                    ],
                    [
                        262,
                        "<?php\n"
                    ],
                    [
                        263,
                        "\n"
                    ],
                    [
                        264,
                        "\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n"
                    ],
                    [
                        265,
                        "\n"
                    ],
                    [
                        266,
                        "while(\\$query_data = mysqli_fetch_row(\\$result)) {\n"
                    ],
                    [
                        267,
                        "  echo \"<tr>\";\n"
                    ],
                    [
                        268,
                        "  echo \"<td>\",\\$query_data[0], \"</td>\",\n"
                    ],
                    [
                        269,
                        "       \"<td>\",\\$query_data[1], \"</td>\",\n"
                    ],
                    [
                        270,
                        "       \"<td>\",\\$query_data[2], \"</td>\";\n"
                    ],
                    [
                        271,
                        "  echo \"</tr>\";\n"
                    ],
                    [
                        272,
                        "}\n"
                    ],
                    [
                        273,
                        "?>\n"
                    ],
                    [
                        274,
                        "\n"
                    ],
                    [
                        275,
                        "</table>\n"
                    ],
                    [
                        276,
                        "\n"
                    ],
                    [
                        277,
                        "<!-- Clean up. -->\n"
                    ],
                    [
                        278,
                        "<?php\n"
                    ],
                    [
                        279,
                        "\n"
                    ],
                    [
                        280,
                        "  mysqli_free_result(\\$result);\n"
                    ],
                    [
                        281,
                        "  mysqli_close(\\$connection);\n"
                    ],
                    [
                        282,
                        "\n"
                    ],
                    [
                        283,
                        "?>\n"
                    ],
                    [
                        284,
                        "\n"
                    ],
                    [
                        285,
                        "</body>\n"
                    ],
                    [
                        286,
                        "</html>\n"
                    ],
                    [
                        287,
                        "\n"
                    ],
                    [
                        288,
                        "\n"
                    ],
                    [
                        289,
                        "<?php\n"
                    ],
                    [
                        290,
                        "\n"
                    ],
                    [
                        291,
                        "/* Add an employee to the table. */\n"
                    ],
                    [
                        292,
                        "function AddEmployee(\\$connection, \\$name, \\$address) {\n"
                    ],
                    [
                        293,
                        "   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n"
                    ],
                    [
                        294,
                        "   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n"
                    ],
                    [
                        295,
                        "\n"
                    ],
                    [
                        296,
                        "   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n"
                    ],
                    [
                        297,
                        "\n"
                    ],
                    [
                        298,
                        "   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n"
                    ],
                    [
                        299,
                        "}\n"
                    ],
                    [
                        300,
                        "\n"
                    ],
                    [
                        301,
                        "/* Check whether the table exists and, if not, create it. */\n"
                    ],
                    [
                        302,
                        "function VerifyEmployeesTable(\\$connection, \\$dbName) {\n"
                    ],
                    [
                        303,
                        "  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n"
                    ],
                    [
                        304,
                        "  {\n"
                    ],
                    [
                        305,
                        "     \\$query = \"CREATE TABLE EMPLOYEES (\n"
                    ],
                    [
                        306,
                        "         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n"
                    ],
                    [
                        307,
                        "         NAME VARCHAR(45),\n"
                    ],
                    [
                        308,
                        "         ADDRESS VARCHAR(90)\n"
                    ],
                    [
                        309,
                        "       )\";\n"
                    ],
                    [
                        310,
                        "\n"
                    ],
                    [
                        311,
                        "     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n"
                    ],
                    [
                        312,
                        "  }\n"
                    ],
                    [
                        313,
                        "}\n"
                    ],
                    [
                        314,
                        "\n"
                    ],
                    [
                        315,
                        "/* Check for the existence of a table. */\n"
                    ],
                    [
                        316,
                        "function TableExists(\\$tableName, \\$connection, \\$dbName) {\n"
                    ],
                    [
                        317,
                        "  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n"
                    ],
                    [
                        318,
                        "  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n"
                    ],
                    [
                        319,
                        "\n"
                    ],
                    [
                        320,
                        "  \\$checktable = mysqli_query(\\$connection,\n"
                    ],
                    [
                        321,
                        "      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n"
                    ],
                    [
                        322,
                        "\n"
                    ],
                    [
                        323,
                        "  if(mysqli_num_rows(\\$checktable) > 0) return true;\n"
                    ],
                    [
                        324,
                        "\n"
                    ],
                    [
                        325,
                        "  return false;\n"
                    ],
                    [
                        326,
                        "}\n"
                    ],
                    [
                        327,
                        "?>               \n"
                    ],
                    [
                        328,
                        "EnD\n"
                    ],
                    [
                        329,
                        "\n"
                    ],
                    [
                        330,
                        "sudo mv /tmp/index.php /var/www/html\n"
                    ],
                    [
                        331,
                        "sudo chown root:root /var/www/html/index.php\n"
                    ],
                    [
                        332,
                        "\n"
                    ],
                    [
                        333,
                        "\n"
                    ],
                    [
                        334,
                        "\n"
                    ],
                    [
                        335,
                        "EOF\n"
                    ],
                    [
                        336,
                        "  tags = {\n"
                    ],
                    [
                        337,
                        "    Name = \"${local.resource_prefix.value}-dbapp\"\n"
                    ],
                    [
                        338,
                        "  }\n"
                    ],
                    [
                        339,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    178,
                    339
                ],
                "resource": "aws_instance.db_app",
                "evaluations": {
                    "password": {
                        "var_file": "consts.tf",
                        "value": "Aa1234321Bb",
                        "definitions": [
                            {
                                "definition_name": "password",
                                "definition_expression": "#! /bin/bash\n### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\nsudo yum -y update\nsudo yum -y install httpd php php-mysqlnd\nsudo systemctl enable httpd \nsudo systemctl start httpd\n\nsudo mkdir /var/www/inc\ncat << EnD > /tmp/dbinfo.inc\n<?php\ndefine('DB_SERVER', '${aws_db_instance.default.endpoint}');\ndefine('DB_USERNAME', '${aws_db_instance.default.username}');\ndefine('DB_PASSWORD', '${var.password}');\ndefine('DB_DATABASE', '${aws_db_instance.default.name}');\n?>\nEnD\nsudo mv /tmp/dbinfo.inc /var/www/inc \nsudo chown root:root /var/www/inc/dbinfo.inc\n\ncat << EnD > /tmp/index.php\n<?php include \"../inc/dbinfo.inc\"; ?>\n<html>\n<body>\n<h1>Sample page</h1>\n<?php\n\n  /* Connect to MySQL and select the database. */\n  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n\n  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n\n  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n\n  /* Ensure that the EMPLOYEES table exists. */\n  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n\n  /* If input fields are populated, add a row to the EMPLOYEES table. */\n  \\$employee_name = htmlentities(\\$_POST['NAME']);\n  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n\n  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n  }\n?>\n\n<!-- Input form -->\n<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n  <table border=\"0\">\n    <tr>\n      <td>NAME</td>\n      <td>ADDRESS</td>\n    </tr>\n    <tr>\n      <td>\n        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n      </td>\n      <td>\n        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n      </td>\n      <td>\n        <input type=\"submit\" value=\"Add Data\" />\n      </td>\n    </tr>\n  </table>\n</form>\n\n<!-- Display table data. -->\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n  <tr>\n    <td>ID</td>\n    <td>NAME</td>\n    <td>ADDRESS</td>\n  </tr>\n\n<?php\n\n\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n\nwhile(\\$query_data = mysqli_fetch_row(\\$result)) {\n  echo \"<tr>\";\n  echo \"<td>\",\\$query_data[0], \"</td>\",\n       \"<td>\",\\$query_data[1], \"</td>\",\n       \"<td>\",\\$query_data[2], \"</td>\";\n  echo \"</tr>\";\n}\n?>\n\n</table>\n\n<!-- Clean up. -->\n<?php\n\n  mysqli_free_result(\\$result);\n  mysqli_close(\\$connection);\n\n?>\n\n</body>\n</html>\n\n\n<?php\n\n/* Add an employee to the table. */\nfunction AddEmployee(\\$connection, \\$name, \\$address) {\n   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n\n   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n\n   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n}\n\n/* Check whether the table exists and, if not, create it. */\nfunction VerifyEmployeesTable(\\$connection, \\$dbName) {\n  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n  {\n     \\$query = \"CREATE TABLE EMPLOYEES (\n         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n         NAME VARCHAR(45),\n         ADDRESS VARCHAR(90)\n       )\";\n\n     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n  }\n}\n\n/* Check for the existence of a table. */\nfunction TableExists(\\$tableName, \\$connection, \\$dbName) {\n  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n\n  \\$checktable = mysqli_query(\\$connection,\n      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n\n  if(mysqli_num_rows(\\$checktable) > 0) return true;\n\n  return false;\n}\n?>               \nEnD\n\nsudo mv /tmp/index.php /var/www/html\nsudo chown root:root /var/www/html/index.php",
                                "definition_path": "resource/10/aws_instance/db_app/user_data/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-dbapp"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        178,
                        "resource \"aws_instance\" \"db_app\" {\n"
                    ],
                    [
                        179,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        180,
                        "  ami                  = data.aws_ami.amazon-linux-2.id\n"
                    ],
                    [
                        181,
                        "  instance_type        = \"t2.nano\"\n"
                    ],
                    [
                        182,
                        "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n"
                    ],
                    [
                        183,
                        "\n"
                    ],
                    [
                        184,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        185,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        186,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        187,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        188,
                        "#! /bin/bash\n"
                    ],
                    [
                        189,
                        "### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\n"
                    ],
                    [
                        190,
                        "sudo yum -y update\n"
                    ],
                    [
                        191,
                        "sudo yum -y install httpd php php-mysqlnd\n"
                    ],
                    [
                        192,
                        "sudo systemctl enable httpd \n"
                    ],
                    [
                        193,
                        "sudo systemctl start httpd\n"
                    ],
                    [
                        194,
                        "\n"
                    ],
                    [
                        195,
                        "sudo mkdir /var/www/inc\n"
                    ],
                    [
                        196,
                        "cat << EnD > /tmp/dbinfo.inc\n"
                    ],
                    [
                        197,
                        "<?php\n"
                    ],
                    [
                        198,
                        "define('DB_SERVER', '${aws_db_instance.default.endpoint}');\n"
                    ],
                    [
                        199,
                        "define('DB_USERNAME', '${aws_db_instance.default.username}');\n"
                    ],
                    [
                        200,
                        "define('DB_PASSWORD', '${var.password}');\n"
                    ],
                    [
                        201,
                        "define('DB_DATABASE', '${aws_db_instance.default.name}');\n"
                    ],
                    [
                        202,
                        "?>\n"
                    ],
                    [
                        203,
                        "EnD\n"
                    ],
                    [
                        204,
                        "sudo mv /tmp/dbinfo.inc /var/www/inc \n"
                    ],
                    [
                        205,
                        "sudo chown root:root /var/www/inc/dbinfo.inc\n"
                    ],
                    [
                        206,
                        "\n"
                    ],
                    [
                        207,
                        "cat << EnD > /tmp/index.php\n"
                    ],
                    [
                        208,
                        "<?php include \"../inc/dbinfo.inc\"; ?>\n"
                    ],
                    [
                        209,
                        "<html>\n"
                    ],
                    [
                        210,
                        "<body>\n"
                    ],
                    [
                        211,
                        "<h1>Sample page</h1>\n"
                    ],
                    [
                        212,
                        "<?php\n"
                    ],
                    [
                        213,
                        "\n"
                    ],
                    [
                        214,
                        "  /* Connect to MySQL and select the database. */\n"
                    ],
                    [
                        215,
                        "  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n"
                    ],
                    [
                        218,
                        "\n"
                    ],
                    [
                        219,
                        "  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        220,
                        "\n"
                    ],
                    [
                        221,
                        "  /* Ensure that the EMPLOYEES table exists. */\n"
                    ],
                    [
                        222,
                        "  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        223,
                        "\n"
                    ],
                    [
                        224,
                        "  /* If input fields are populated, add a row to the EMPLOYEES table. */\n"
                    ],
                    [
                        225,
                        "  \\$employee_name = htmlentities(\\$_POST['NAME']);\n"
                    ],
                    [
                        226,
                        "  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n"
                    ],
                    [
                        227,
                        "\n"
                    ],
                    [
                        228,
                        "  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n"
                    ],
                    [
                        229,
                        "    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n"
                    ],
                    [
                        230,
                        "  }\n"
                    ],
                    [
                        231,
                        "?>\n"
                    ],
                    [
                        232,
                        "\n"
                    ],
                    [
                        233,
                        "<!-- Input form -->\n"
                    ],
                    [
                        234,
                        "<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n"
                    ],
                    [
                        235,
                        "  <table border=\"0\">\n"
                    ],
                    [
                        236,
                        "    <tr>\n"
                    ],
                    [
                        237,
                        "      <td>NAME</td>\n"
                    ],
                    [
                        238,
                        "      <td>ADDRESS</td>\n"
                    ],
                    [
                        239,
                        "    </tr>\n"
                    ],
                    [
                        240,
                        "    <tr>\n"
                    ],
                    [
                        241,
                        "      <td>\n"
                    ],
                    [
                        242,
                        "        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n"
                    ],
                    [
                        243,
                        "      </td>\n"
                    ],
                    [
                        244,
                        "      <td>\n"
                    ],
                    [
                        245,
                        "        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n"
                    ],
                    [
                        246,
                        "      </td>\n"
                    ],
                    [
                        247,
                        "      <td>\n"
                    ],
                    [
                        248,
                        "        <input type=\"submit\" value=\"Add Data\" />\n"
                    ],
                    [
                        249,
                        "      </td>\n"
                    ],
                    [
                        250,
                        "    </tr>\n"
                    ],
                    [
                        251,
                        "  </table>\n"
                    ],
                    [
                        252,
                        "</form>\n"
                    ],
                    [
                        253,
                        "\n"
                    ],
                    [
                        254,
                        "<!-- Display table data. -->\n"
                    ],
                    [
                        255,
                        "<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n"
                    ],
                    [
                        256,
                        "  <tr>\n"
                    ],
                    [
                        257,
                        "    <td>ID</td>\n"
                    ],
                    [
                        258,
                        "    <td>NAME</td>\n"
                    ],
                    [
                        259,
                        "    <td>ADDRESS</td>\n"
                    ],
                    [
                        260,
                        "  </tr>\n"
                    ],
                    [
                        261,
                        "\n"
                    ],
                    [
                        262,
                        "<?php\n"
                    ],
                    [
                        263,
                        "\n"
                    ],
                    [
                        264,
                        "\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n"
                    ],
                    [
                        265,
                        "\n"
                    ],
                    [
                        266,
                        "while(\\$query_data = mysqli_fetch_row(\\$result)) {\n"
                    ],
                    [
                        267,
                        "  echo \"<tr>\";\n"
                    ],
                    [
                        268,
                        "  echo \"<td>\",\\$query_data[0], \"</td>\",\n"
                    ],
                    [
                        269,
                        "       \"<td>\",\\$query_data[1], \"</td>\",\n"
                    ],
                    [
                        270,
                        "       \"<td>\",\\$query_data[2], \"</td>\";\n"
                    ],
                    [
                        271,
                        "  echo \"</tr>\";\n"
                    ],
                    [
                        272,
                        "}\n"
                    ],
                    [
                        273,
                        "?>\n"
                    ],
                    [
                        274,
                        "\n"
                    ],
                    [
                        275,
                        "</table>\n"
                    ],
                    [
                        276,
                        "\n"
                    ],
                    [
                        277,
                        "<!-- Clean up. -->\n"
                    ],
                    [
                        278,
                        "<?php\n"
                    ],
                    [
                        279,
                        "\n"
                    ],
                    [
                        280,
                        "  mysqli_free_result(\\$result);\n"
                    ],
                    [
                        281,
                        "  mysqli_close(\\$connection);\n"
                    ],
                    [
                        282,
                        "\n"
                    ],
                    [
                        283,
                        "?>\n"
                    ],
                    [
                        284,
                        "\n"
                    ],
                    [
                        285,
                        "</body>\n"
                    ],
                    [
                        286,
                        "</html>\n"
                    ],
                    [
                        287,
                        "\n"
                    ],
                    [
                        288,
                        "\n"
                    ],
                    [
                        289,
                        "<?php\n"
                    ],
                    [
                        290,
                        "\n"
                    ],
                    [
                        291,
                        "/* Add an employee to the table. */\n"
                    ],
                    [
                        292,
                        "function AddEmployee(\\$connection, \\$name, \\$address) {\n"
                    ],
                    [
                        293,
                        "   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n"
                    ],
                    [
                        294,
                        "   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n"
                    ],
                    [
                        295,
                        "\n"
                    ],
                    [
                        296,
                        "   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n"
                    ],
                    [
                        297,
                        "\n"
                    ],
                    [
                        298,
                        "   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n"
                    ],
                    [
                        299,
                        "}\n"
                    ],
                    [
                        300,
                        "\n"
                    ],
                    [
                        301,
                        "/* Check whether the table exists and, if not, create it. */\n"
                    ],
                    [
                        302,
                        "function VerifyEmployeesTable(\\$connection, \\$dbName) {\n"
                    ],
                    [
                        303,
                        "  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n"
                    ],
                    [
                        304,
                        "  {\n"
                    ],
                    [
                        305,
                        "     \\$query = \"CREATE TABLE EMPLOYEES (\n"
                    ],
                    [
                        306,
                        "         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n"
                    ],
                    [
                        307,
                        "         NAME VARCHAR(45),\n"
                    ],
                    [
                        308,
                        "         ADDRESS VARCHAR(90)\n"
                    ],
                    [
                        309,
                        "       )\";\n"
                    ],
                    [
                        310,
                        "\n"
                    ],
                    [
                        311,
                        "     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n"
                    ],
                    [
                        312,
                        "  }\n"
                    ],
                    [
                        313,
                        "}\n"
                    ],
                    [
                        314,
                        "\n"
                    ],
                    [
                        315,
                        "/* Check for the existence of a table. */\n"
                    ],
                    [
                        316,
                        "function TableExists(\\$tableName, \\$connection, \\$dbName) {\n"
                    ],
                    [
                        317,
                        "  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n"
                    ],
                    [
                        318,
                        "  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n"
                    ],
                    [
                        319,
                        "\n"
                    ],
                    [
                        320,
                        "  \\$checktable = mysqli_query(\\$connection,\n"
                    ],
                    [
                        321,
                        "      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n"
                    ],
                    [
                        322,
                        "\n"
                    ],
                    [
                        323,
                        "  if(mysqli_num_rows(\\$checktable) > 0) return true;\n"
                    ],
                    [
                        324,
                        "\n"
                    ],
                    [
                        325,
                        "  return false;\n"
                    ],
                    [
                        326,
                        "}\n"
                    ],
                    [
                        327,
                        "?>               \n"
                    ],
                    [
                        328,
                        "EnD\n"
                    ],
                    [
                        329,
                        "\n"
                    ],
                    [
                        330,
                        "sudo mv /tmp/index.php /var/www/html\n"
                    ],
                    [
                        331,
                        "sudo chown root:root /var/www/html/index.php\n"
                    ],
                    [
                        332,
                        "\n"
                    ],
                    [
                        333,
                        "\n"
                    ],
                    [
                        334,
                        "\n"
                    ],
                    [
                        335,
                        "EOF\n"
                    ],
                    [
                        336,
                        "  tags = {\n"
                    ],
                    [
                        337,
                        "    Name = \"${local.resource_prefix.value}-dbapp\"\n"
                    ],
                    [
                        338,
                        "  }\n"
                    ],
                    [
                        339,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    178,
                    339
                ],
                "resource": "aws_instance.db_app",
                "evaluations": {
                    "password": {
                        "var_file": "consts.tf",
                        "value": "Aa1234321Bb",
                        "definitions": [
                            {
                                "definition_name": "password",
                                "definition_expression": "#! /bin/bash\n### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\nsudo yum -y update\nsudo yum -y install httpd php php-mysqlnd\nsudo systemctl enable httpd \nsudo systemctl start httpd\n\nsudo mkdir /var/www/inc\ncat << EnD > /tmp/dbinfo.inc\n<?php\ndefine('DB_SERVER', '${aws_db_instance.default.endpoint}');\ndefine('DB_USERNAME', '${aws_db_instance.default.username}');\ndefine('DB_PASSWORD', '${var.password}');\ndefine('DB_DATABASE', '${aws_db_instance.default.name}');\n?>\nEnD\nsudo mv /tmp/dbinfo.inc /var/www/inc \nsudo chown root:root /var/www/inc/dbinfo.inc\n\ncat << EnD > /tmp/index.php\n<?php include \"../inc/dbinfo.inc\"; ?>\n<html>\n<body>\n<h1>Sample page</h1>\n<?php\n\n  /* Connect to MySQL and select the database. */\n  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n\n  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n\n  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n\n  /* Ensure that the EMPLOYEES table exists. */\n  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n\n  /* If input fields are populated, add a row to the EMPLOYEES table. */\n  \\$employee_name = htmlentities(\\$_POST['NAME']);\n  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n\n  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n  }\n?>\n\n<!-- Input form -->\n<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n  <table border=\"0\">\n    <tr>\n      <td>NAME</td>\n      <td>ADDRESS</td>\n    </tr>\n    <tr>\n      <td>\n        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n      </td>\n      <td>\n        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n      </td>\n      <td>\n        <input type=\"submit\" value=\"Add Data\" />\n      </td>\n    </tr>\n  </table>\n</form>\n\n<!-- Display table data. -->\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n  <tr>\n    <td>ID</td>\n    <td>NAME</td>\n    <td>ADDRESS</td>\n  </tr>\n\n<?php\n\n\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n\nwhile(\\$query_data = mysqli_fetch_row(\\$result)) {\n  echo \"<tr>\";\n  echo \"<td>\",\\$query_data[0], \"</td>\",\n       \"<td>\",\\$query_data[1], \"</td>\",\n       \"<td>\",\\$query_data[2], \"</td>\";\n  echo \"</tr>\";\n}\n?>\n\n</table>\n\n<!-- Clean up. -->\n<?php\n\n  mysqli_free_result(\\$result);\n  mysqli_close(\\$connection);\n\n?>\n\n</body>\n</html>\n\n\n<?php\n\n/* Add an employee to the table. */\nfunction AddEmployee(\\$connection, \\$name, \\$address) {\n   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n\n   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n\n   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n}\n\n/* Check whether the table exists and, if not, create it. */\nfunction VerifyEmployeesTable(\\$connection, \\$dbName) {\n  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n  {\n     \\$query = \"CREATE TABLE EMPLOYEES (\n         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n         NAME VARCHAR(45),\n         ADDRESS VARCHAR(90)\n       )\";\n\n     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n  }\n}\n\n/* Check for the existence of a table. */\nfunction TableExists(\\$tableName, \\$connection, \\$dbName) {\n  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n\n  \\$checktable = mysqli_query(\\$connection,\n      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n\n  if(mysqli_num_rows(\\$checktable) > 0) return true;\n\n  return false;\n}\n?>               \nEnD\n\nsudo mv /tmp/index.php /var/www/html\nsudo chown root:root /var/www/html/index.php",
                                "definition_path": "resource/10/aws_instance/db_app/user_data/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-dbapp"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_62",
                "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                    ],
                    [
                        17,
                        "  name = \"excess_policy\"\n"
                    ],
                    [
                        18,
                        "  user = \"${aws_iam_user.user.name}\"\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  policy = <<EOF\n"
                    ],
                    [
                        21,
                        "{\n"
                    ],
                    [
                        22,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        23,
                        "  \"Statement\": [\n"
                    ],
                    [
                        24,
                        "    {\n"
                    ],
                    [
                        25,
                        "      \"Action\": [\n"
                    ],
                    [
                        26,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        27,
                        "        \"s3:*\",\n"
                    ],
                    [
                        28,
                        "        \"lambda:*\",\n"
                    ],
                    [
                        29,
                        "        \"cloudwatch:*\"\n"
                    ],
                    [
                        30,
                        "      ],\n"
                    ],
                    [
                        31,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        32,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        33,
                        "    }\n"
                    ],
                    [
                        34,
                        "  ]\n"
                    ],
                    [
                        35,
                        "}\n"
                    ],
                    [
                        36,
                        "EOF\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/iam.tf",
                "repo_file_path": "/terraform/aws/iam.tf",
                "file_line_range": [
                    16,
                    37
                ],
                "resource": "aws_iam_user_policy.userpolicy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_47"
            },
            {
                "check_id": "CKV_AWS_63",
                "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                    ],
                    [
                        17,
                        "  name = \"excess_policy\"\n"
                    ],
                    [
                        18,
                        "  user = \"${aws_iam_user.user.name}\"\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  policy = <<EOF\n"
                    ],
                    [
                        21,
                        "{\n"
                    ],
                    [
                        22,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        23,
                        "  \"Statement\": [\n"
                    ],
                    [
                        24,
                        "    {\n"
                    ],
                    [
                        25,
                        "      \"Action\": [\n"
                    ],
                    [
                        26,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        27,
                        "        \"s3:*\",\n"
                    ],
                    [
                        28,
                        "        \"lambda:*\",\n"
                    ],
                    [
                        29,
                        "        \"cloudwatch:*\"\n"
                    ],
                    [
                        30,
                        "      ],\n"
                    ],
                    [
                        31,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        32,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        33,
                        "    }\n"
                    ],
                    [
                        34,
                        "  ]\n"
                    ],
                    [
                        35,
                        "}\n"
                    ],
                    [
                        36,
                        "EOF\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/iam.tf",
                "repo_file_path": "/terraform/aws/iam.tf",
                "file_line_range": [
                    16,
                    37
                ],
                "resource": "aws_iam_user_policy.userpolicy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_48"
            },
            {
                "check_id": "CKV_AWS_102",
                "check_name": "Ensure Neptune Cluster instance is not publicly available",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        12,
                        "resource \"aws_neptune_cluster_instance\" \"default\" {\n"
                    ],
                    [
                        13,
                        "  count                               = 1\n"
                    ],
                    [
                        14,
                        "  cluster_identifier                  = aws_neptune_cluster.default.id\n"
                    ],
                    [
                        15,
                        "  engine                              = \"neptune\"\n"
                    ],
                    [
                        16,
                        "  instance_class                      = \"db.t3.medium\" # Smallest instance type listed for neptune https://aws.amazon.com/neptune/pricing/\n"
                    ],
                    [
                        17,
                        "  apply_immediately                   = true\n"
                    ],
                    [
                        18,
                        "  #publicly_accessible                = true # No longer supported, API returns create error. See https://docs.aws.amazon.com/neptune/latest/userguide/api-instances.html#CreateDBInstance\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/neptune.tf",
                "repo_file_path": "/terraform/aws/neptune.tf",
                "file_line_range": [
                    12,
                    19
                ],
                "resource": "aws_neptune_cluster_instance.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.NeptuneClusterInstancePublic",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_42"
            },
            {
                "check_id": "CKV_AWS_70",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_93",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_70",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_93",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_70",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_93",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_70",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_93",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_70",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_93",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_108",
                "check_name": "Ensure IAM policies does not allow data exfiltration",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMDataExfiltration",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_109",
                "check_name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMPermissionsManagement",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_49",
                "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.StarActionPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_43"
            },
            {
                "check_id": "CKV_AWS_1",
                "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.AdminPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_23"
            },
            {
                "check_id": "CKV_AWS_110",
                "check_name": "Ensure IAM policies does not allow privilege escalation",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMPrivilegeEscalation",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_107",
                "check_name": "Ensure IAM policies does not allow credentials exposure",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMCredentialsExposure",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_111",
                "check_name": "Ensure IAM policies does not allow write access without constraints",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "data aws_iam_policy_document \"iam_policy_eks\" {\n"
                    ],
                    [
                        8,
                        "  statement {\n"
                    ],
                    [
                        9,
                        "    effect  = \"Allow\"\n"
                    ],
                    [
                        10,
                        "    actions = [\"sts:AssumeRole\"]\n"
                    ],
                    [
                        11,
                        "    principals {\n"
                    ],
                    [
                        12,
                        "      type        = \"Service\"\n"
                    ],
                    [
                        13,
                        "      identifiers = [\"eks.amazonaws.com\"]\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    7,
                    16
                ],
                "resource": "aws_iam_policy_document.iam_policy_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMWriteAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_61",
                "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        18,
                        "resource aws_iam_role \"iam_for_eks\" {\n"
                    ],
                    [
                        19,
                        "  name               = \"${local.resource_prefix.value}-iam-for-eks\"\n"
                    ],
                    [
                        20,
                        "  assume_role_policy = data.aws_iam_policy_document.iam_policy_eks.json\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    18,
                    21
                ],
                "resource": "aws_iam_role.iam_for_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
            },
            {
                "check_id": "CKV_AWS_60",
                "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        18,
                        "resource aws_iam_role \"iam_for_eks\" {\n"
                    ],
                    [
                        19,
                        "  name               = \"${local.resource_prefix.value}-iam-for-eks\"\n"
                    ],
                    [
                        20,
                        "  assume_role_policy = data.aws_iam_policy_document.iam_policy_eks.json\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    18,
                    21
                ],
                "resource": "aws_iam_role.iam_for_eks",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
            },
            {
                "check_id": "CKV_AWS_108",
                "check_name": "Ensure IAM policies does not allow data exfiltration",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMDataExfiltration",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_49",
                "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.StarActionPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_43"
            },
            {
                "check_id": "CKV_AWS_1",
                "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.AdminPolicyDocument",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_23"
            },
            {
                "check_id": "CKV_AWS_110",
                "check_name": "Ensure IAM policies does not allow privilege escalation",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMPrivilegeEscalation",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_107",
                "check_name": "Ensure IAM policies does not allow credentials exposure",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMCredentialsExposure",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_41",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        2,
                        "provider \"aws\" {\n"
                    ],
                    [
                        3,
                        "  profile = var.profile\n"
                    ],
                    [
                        4,
                        "  region  = var.region\n"
                    ],
                    [
                        5,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/providers.tf",
                "repo_file_path": "/terraform/aws/providers.tf",
                "file_line_range": [
                    2,
                    5
                ],
                "resource": "aws.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_88",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_instance\" \"web_host\" {\n"
                    ],
                    [
                        2,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        3,
                        "  ami           = \"${var.ami}\"\n"
                    ],
                    [
                        4,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        7,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        8,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        9,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        10,
                        "#! /bin/bash\n"
                    ],
                    [
                        11,
                        "sudo apt-get update\n"
                    ],
                    [
                        12,
                        "sudo apt-get install -y apache2\n"
                    ],
                    [
                        13,
                        "sudo systemctl start apache2\n"
                    ],
                    [
                        14,
                        "sudo systemctl enable apache2\n"
                    ],
                    [
                        15,
                        "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                    ],
                    [
                        16,
                        "export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                    ],
                    [
                        17,
                        "export AWS_DEFAULT_REGION=us-west-2\n"
                    ],
                    [
                        18,
                        "echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                    ],
                    [
                        19,
                        "EOF\n"
                    ],
                    [
                        20,
                        "  tags = {\n"
                    ],
                    [
                        21,
                        "    Name = \"${local.resource_prefix.value}-ec2\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    1,
                    23
                ],
                "resource": "aws_instance.web_host",
                "evaluations": {
                    "ami": {
                        "var_file": "consts.tf",
                        "value": "ami-09a5b0b7edf08843d",
                        "definitions": [
                            {
                                "definition_name": "ami",
                                "definition_expression": "${var.ami}",
                                "definition_path": "resource/0/aws_instance/web_host/ami/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "description"
                    ]
                },
                "code_block": [
                    [
                        50,
                        "resource \"aws_security_group\" \"web-node\" {\n"
                    ],
                    [
                        51,
                        "  # security group is open to the world in SSH port\n"
                    ],
                    [
                        52,
                        "  name        = \"${local.resource_prefix.value}-sg\"\n"
                    ],
                    [
                        53,
                        "  description = \"${local.resource_prefix.value} Security Group\"\n"
                    ],
                    [
                        54,
                        "  vpc_id      = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  ingress {\n"
                    ],
                    [
                        57,
                        "    from_port = 80\n"
                    ],
                    [
                        58,
                        "    to_port   = 80\n"
                    ],
                    [
                        59,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        60,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        61,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        62,
                        "  }\n"
                    ],
                    [
                        63,
                        "  ingress {\n"
                    ],
                    [
                        64,
                        "    from_port = 22\n"
                    ],
                    [
                        65,
                        "    to_port   = 22\n"
                    ],
                    [
                        66,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        67,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        68,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        69,
                        "  }\n"
                    ],
                    [
                        70,
                        "  egress {\n"
                    ],
                    [
                        71,
                        "    from_port = 0\n"
                    ],
                    [
                        72,
                        "    to_port   = 0\n"
                    ],
                    [
                        73,
                        "    protocol  = \"-1\"\n"
                    ],
                    [
                        74,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        75,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        76,
                        "  }\n"
                    ],
                    [
                        77,
                        "  depends_on = [aws_vpc.web_vpc]\n"
                    ],
                    [
                        78,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    50,
                    78
                ],
                "resource": "aws_security_group.web-node",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_25",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        50,
                        "resource \"aws_security_group\" \"web-node\" {\n"
                    ],
                    [
                        51,
                        "  # security group is open to the world in SSH port\n"
                    ],
                    [
                        52,
                        "  name        = \"${local.resource_prefix.value}-sg\"\n"
                    ],
                    [
                        53,
                        "  description = \"${local.resource_prefix.value} Security Group\"\n"
                    ],
                    [
                        54,
                        "  vpc_id      = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  ingress {\n"
                    ],
                    [
                        57,
                        "    from_port = 80\n"
                    ],
                    [
                        58,
                        "    to_port   = 80\n"
                    ],
                    [
                        59,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        60,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        61,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        62,
                        "  }\n"
                    ],
                    [
                        63,
                        "  ingress {\n"
                    ],
                    [
                        64,
                        "    from_port = 22\n"
                    ],
                    [
                        65,
                        "    to_port   = 22\n"
                    ],
                    [
                        66,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        67,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        68,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        69,
                        "  }\n"
                    ],
                    [
                        70,
                        "  egress {\n"
                    ],
                    [
                        71,
                        "    from_port = 0\n"
                    ],
                    [
                        72,
                        "    to_port   = 0\n"
                    ],
                    [
                        73,
                        "    protocol  = \"-1\"\n"
                    ],
                    [
                        74,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        75,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        76,
                        "  }\n"
                    ],
                    [
                        77,
                        "  depends_on = [aws_vpc.web_vpc]\n"
                    ],
                    [
                        78,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    50,
                    78
                ],
                "resource": "aws_security_group.web-node",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_2"
            },
            {
                "check_id": "CKV_AWS_70",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_93",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_GCP_40",
                "check_name": "Ensure that Compute instances do not have public IP addresses",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "access_config"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeExternalIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_public_2"
            },
            {
                "check_id": "CKV_GCP_31",
                "check_name": "Ensure that instances are not configured to use the default service account with full access to all Cloud APIs",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeDefaultServiceAccountFullAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_iam_2"
            },
            {
                "check_id": "CKV_GCP_55",
                "check_name": "Ensure PostgreSQL database 'log_min_messages' flag is set to a valid value",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogMinMessage",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_6"
            },
            {
                "check_id": "CKV_GCP_59",
                "check_name": "Ensure SQL database 'contained database authentication' flag is set to 'off'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudSqlServerContainedDBAuthentication",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_10"
            },
            {
                "check_id": "CKV_GCP_53",
                "check_name": "Ensure PostgreSQL database 'log_disconnections' flag is set to 'on'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogDisconnection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_4"
            },
            {
                "check_id": "CKV_GCP_52",
                "check_name": "Ensure PostgreSQL database 'log_connections' flag is set to 'on'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogConnection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_3"
            },
            {
                "check_id": "CKV_GCP_50",
                "check_name": "Ensure MySQL database 'local_infile' flag is set to 'off'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudMySqlLocalInfileOff",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_1"
            },
            {
                "check_id": "CKV_GCP_57",
                "check_name": "Ensure PostgreSQL database 'log_min_duration_statement' flag is set to '-1'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogMinDuration",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_8"
            },
            {
                "check_id": "CKV_GCP_60",
                "check_name": "Ensure SQL database do not have public IP",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudSqlServerNoPublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_11"
            },
            {
                "check_id": "CKV_GCP_54",
                "check_name": "Ensure PostgreSQL database 'log_lock_waits' flag is set to 'on'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogLockWaits",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_5"
            },
            {
                "check_id": "CKV_GCP_56",
                "check_name": "Ensure PostgreSQL database 'log_temp_files flag is set to '0'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogTemp",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_7"
            },
            {
                "check_id": "CKV_GCP_58",
                "check_name": "Ensure SQL database 'cross db ownership chaining' flag is set to 'off'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudSqlServerCrossDBOwnershipChaining",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_9"
            },
            {
                "check_id": "CKV_GCP_51",
                "check_name": "Ensure PostgreSQL database 'log_checkpoints' flag is set to 'on'",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudPostgreSqlLogCheckpoints",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_sql_2"
            },
            {
                "check_id": "CKV_GCP_20",
                "check_name": "Ensure master authorized networks is set to enabled in GKE clusters",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "master_authorized_networks_config"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEMasterAuthorizedNetworksEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_12"
            }
        ],
        "failed_checks": [
            {
                "check_id": "CKV_AZURE_39",
                "check_name": "Ensure that no custom subscription owner roles are created",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        3,
                        "resource \"azurerm_role_definition\" \"example\" {\n"
                    ],
                    [
                        4,
                        "  name        = \"my-custom-role\"\n"
                    ],
                    [
                        5,
                        "  scope       = data.azurerm_subscription.current_subscription.id\n"
                    ],
                    [
                        6,
                        "  description = \"This is a custom role created via Terraform\"\n"
                    ],
                    [
                        7,
                        "\n"
                    ],
                    [
                        8,
                        "  permissions {\n"
                    ],
                    [
                        9,
                        "    actions     = [\"*\"]\n"
                    ],
                    [
                        10,
                        "    not_actions = []\n"
                    ],
                    [
                        11,
                        "  }\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "  assignable_scopes = [\n"
                    ],
                    [
                        14,
                        "    data.azurerm_subscription.current_subscription.id\n"
                    ],
                    [
                        15,
                        "  ]\n"
                    ],
                    [
                        16,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/roles.tf",
                "repo_file_path": "/terraform/azure/roles.tf",
                "file_line_range": [
                    3,
                    16
                ],
                "resource": "azurerm_role_definition.example",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.CutsomRoleDefinitionSubscriptionOwner",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/do-not-create-custom-subscription-owner-roles"
            },
            {
                "check_id": "CKV_AZURE_37",
                "check_name": "Ensure that Activity Log Retention is set 365 days or greater",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_monitor_log_profile \"logging_profile\" {\n"
                    ],
                    [
                        2,
                        "  storage_account_id = azurerm_storage_account.example.id\n"
                    ],
                    [
                        3,
                        "  categories         = [\"Action\"]\n"
                    ],
                    [
                        4,
                        "  locations          = [var.location]\n"
                    ],
                    [
                        5,
                        "  name               = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        6,
                        "  retention_policy {\n"
                    ],
                    [
                        7,
                        "    enabled = true\n"
                    ],
                    [
                        8,
                        "    days    = 30\n"
                    ],
                    [
                        9,
                        "  }\n"
                    ],
                    [
                        10,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/logging.tf",
                "repo_file_path": "/terraform/azure/logging.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "azurerm_monitor_log_profile.logging_profile",
                "evaluations": {
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_monitor_log_profile/logging_profile/locations/0/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_monitor_log_profile/logging_profile/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.MonitorLogProfileRetentionDays",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/set-activity-log-retention-to-365-days-or-greater"
            },
            {
                "check_id": "CKV_AZURE_38",
                "check_name": "Ensure audit profile captures all the activities",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_monitor_log_profile \"logging_profile\" {\n"
                    ],
                    [
                        2,
                        "  storage_account_id = azurerm_storage_account.example.id\n"
                    ],
                    [
                        3,
                        "  categories         = [\"Action\"]\n"
                    ],
                    [
                        4,
                        "  locations          = [var.location]\n"
                    ],
                    [
                        5,
                        "  name               = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        6,
                        "  retention_policy {\n"
                    ],
                    [
                        7,
                        "    enabled = true\n"
                    ],
                    [
                        8,
                        "    days    = 30\n"
                    ],
                    [
                        9,
                        "  }\n"
                    ],
                    [
                        10,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/logging.tf",
                "repo_file_path": "/terraform/azure/logging.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "azurerm_monitor_log_profile.logging_profile",
                "evaluations": {
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_monitor_log_profile/logging_profile/locations/0/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_monitor_log_profile/logging_profile/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.MonitorLogProfileCategories",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-audit-profile-captures-all-activities"
            },
            {
                "check_id": "CKV_AZURE_2",
                "check_name": "Ensure Azure managed disk has encryption enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"azurerm_managed_disk\" \"example\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"terragoat-disk-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  location             = var.location\n"
                    ],
                    [
                        4,
                        "  resource_group_name  = azurerm_resource_group.example.name\n"
                    ],
                    [
                        5,
                        "  storage_account_type = \"Standard_LRS\"\n"
                    ],
                    [
                        6,
                        "  create_option        = \"Empty\"\n"
                    ],
                    [
                        7,
                        "  disk_size_gb         = 1\n"
                    ],
                    [
                        8,
                        "  encryption_settings {\n"
                    ],
                    [
                        9,
                        "    enabled = false\n"
                    ],
                    [
                        10,
                        "  }\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    1,
                    11
                ],
                "resource": "azurerm_managed_disk.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-disk-${var.environment}",
                                "definition_path": "resource/0/azurerm_managed_disk/example/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_managed_disk/example/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AzureManagedDiskEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_1"
            },
            {
                "check_id": "CKV_AZURE_44",
                "check_name": "Ensure Storage Account is using the latest version of TLS encryption",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        13,
                        "resource \"azurerm_storage_account\" \"example\" {\n"
                    ],
                    [
                        14,
                        "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        15,
                        "  resource_group_name      = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  location                 = azurerm_resource_group.example.location\n"
                    ],
                    [
                        17,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        18,
                        "  account_replication_type = \"GRS\"\n"
                    ],
                    [
                        19,
                        "  queue_properties {\n"
                    ],
                    [
                        20,
                        "    logging {\n"
                    ],
                    [
                        21,
                        "      delete                = false\n"
                    ],
                    [
                        22,
                        "      read                  = false\n"
                    ],
                    [
                        23,
                        "      write                 = true\n"
                    ],
                    [
                        24,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        25,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        26,
                        "    }\n"
                    ],
                    [
                        27,
                        "    hour_metrics {\n"
                    ],
                    [
                        28,
                        "      enabled               = true\n"
                    ],
                    [
                        29,
                        "      include_apis          = true\n"
                    ],
                    [
                        30,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        31,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        32,
                        "    }\n"
                    ],
                    [
                        33,
                        "    minute_metrics {\n"
                    ],
                    [
                        34,
                        "      enabled               = true\n"
                    ],
                    [
                        35,
                        "      include_apis          = true\n"
                    ],
                    [
                        36,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        37,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        38,
                        "    }\n"
                    ],
                    [
                        39,
                        "  }\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    13,
                    40
                ],
                "resource": "azurerm_storage_account.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tgsa${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_storage_account/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountMinimumTlsVersion",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_storage_2"
            },
            {
                "check_id": "CKV_AZURE_35",
                "check_name": "Ensure default network access rule for Storage Accounts is set to deny",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        13,
                        "resource \"azurerm_storage_account\" \"example\" {\n"
                    ],
                    [
                        14,
                        "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        15,
                        "  resource_group_name      = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  location                 = azurerm_resource_group.example.location\n"
                    ],
                    [
                        17,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        18,
                        "  account_replication_type = \"GRS\"\n"
                    ],
                    [
                        19,
                        "  queue_properties {\n"
                    ],
                    [
                        20,
                        "    logging {\n"
                    ],
                    [
                        21,
                        "      delete                = false\n"
                    ],
                    [
                        22,
                        "      read                  = false\n"
                    ],
                    [
                        23,
                        "      write                 = true\n"
                    ],
                    [
                        24,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        25,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        26,
                        "    }\n"
                    ],
                    [
                        27,
                        "    hour_metrics {\n"
                    ],
                    [
                        28,
                        "      enabled               = true\n"
                    ],
                    [
                        29,
                        "      include_apis          = true\n"
                    ],
                    [
                        30,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        31,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        32,
                        "    }\n"
                    ],
                    [
                        33,
                        "    minute_metrics {\n"
                    ],
                    [
                        34,
                        "      enabled               = true\n"
                    ],
                    [
                        35,
                        "      include_apis          = true\n"
                    ],
                    [
                        36,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        37,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        38,
                        "    }\n"
                    ],
                    [
                        39,
                        "  }\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    13,
                    40
                ],
                "resource": "azurerm_storage_account.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tgsa${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_storage_account/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountDefaultNetworkAccessDeny",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny"
            },
            {
                "check_id": "CKV_AZURE_33",
                "check_name": "Ensure Storage logging is enabled for Queue service for read, write and delete requests",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        13,
                        "resource \"azurerm_storage_account\" \"example\" {\n"
                    ],
                    [
                        14,
                        "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        15,
                        "  resource_group_name      = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  location                 = azurerm_resource_group.example.location\n"
                    ],
                    [
                        17,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        18,
                        "  account_replication_type = \"GRS\"\n"
                    ],
                    [
                        19,
                        "  queue_properties {\n"
                    ],
                    [
                        20,
                        "    logging {\n"
                    ],
                    [
                        21,
                        "      delete                = false\n"
                    ],
                    [
                        22,
                        "      read                  = false\n"
                    ],
                    [
                        23,
                        "      write                 = true\n"
                    ],
                    [
                        24,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        25,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        26,
                        "    }\n"
                    ],
                    [
                        27,
                        "    hour_metrics {\n"
                    ],
                    [
                        28,
                        "      enabled               = true\n"
                    ],
                    [
                        29,
                        "      include_apis          = true\n"
                    ],
                    [
                        30,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        31,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        32,
                        "    }\n"
                    ],
                    [
                        33,
                        "    minute_metrics {\n"
                    ],
                    [
                        34,
                        "      enabled               = true\n"
                    ],
                    [
                        35,
                        "      include_apis          = true\n"
                    ],
                    [
                        36,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        37,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        38,
                        "    }\n"
                    ],
                    [
                        39,
                        "  }\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    13,
                    40
                ],
                "resource": "azurerm_storage_account.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tgsa${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_storage_account/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountLoggingQueueServiceEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service"
            },
            {
                "check_id": "CKV_AZURE_43",
                "check_name": "Ensure the Storage Account naming rules",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        13,
                        "resource \"azurerm_storage_account\" \"example\" {\n"
                    ],
                    [
                        14,
                        "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        15,
                        "  resource_group_name      = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  location                 = azurerm_resource_group.example.location\n"
                    ],
                    [
                        17,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        18,
                        "  account_replication_type = \"GRS\"\n"
                    ],
                    [
                        19,
                        "  queue_properties {\n"
                    ],
                    [
                        20,
                        "    logging {\n"
                    ],
                    [
                        21,
                        "      delete                = false\n"
                    ],
                    [
                        22,
                        "      read                  = false\n"
                    ],
                    [
                        23,
                        "      write                 = true\n"
                    ],
                    [
                        24,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        25,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        26,
                        "    }\n"
                    ],
                    [
                        27,
                        "    hour_metrics {\n"
                    ],
                    [
                        28,
                        "      enabled               = true\n"
                    ],
                    [
                        29,
                        "      include_apis          = true\n"
                    ],
                    [
                        30,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        31,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        32,
                        "    }\n"
                    ],
                    [
                        33,
                        "    minute_metrics {\n"
                    ],
                    [
                        34,
                        "      enabled               = true\n"
                    ],
                    [
                        35,
                        "      include_apis          = true\n"
                    ],
                    [
                        36,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        37,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        38,
                        "    }\n"
                    ],
                    [
                        39,
                        "  }\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    13,
                    40
                ],
                "resource": "azurerm_storage_account.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tgsa${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_storage_account/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountName",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AZURE_3",
                "check_name": "Ensure that 'Secure transfer required' is set to 'Enabled'",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_https_traffic_only"
                    ]
                },
                "code_block": [
                    [
                        13,
                        "resource \"azurerm_storage_account\" \"example\" {\n"
                    ],
                    [
                        14,
                        "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        15,
                        "  resource_group_name      = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  location                 = azurerm_resource_group.example.location\n"
                    ],
                    [
                        17,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        18,
                        "  account_replication_type = \"GRS\"\n"
                    ],
                    [
                        19,
                        "  queue_properties {\n"
                    ],
                    [
                        20,
                        "    logging {\n"
                    ],
                    [
                        21,
                        "      delete                = false\n"
                    ],
                    [
                        22,
                        "      read                  = false\n"
                    ],
                    [
                        23,
                        "      write                 = true\n"
                    ],
                    [
                        24,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        25,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        26,
                        "    }\n"
                    ],
                    [
                        27,
                        "    hour_metrics {\n"
                    ],
                    [
                        28,
                        "      enabled               = true\n"
                    ],
                    [
                        29,
                        "      include_apis          = true\n"
                    ],
                    [
                        30,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        31,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        32,
                        "    }\n"
                    ],
                    [
                        33,
                        "    minute_metrics {\n"
                    ],
                    [
                        34,
                        "      enabled               = true\n"
                    ],
                    [
                        35,
                        "      include_apis          = true\n"
                    ],
                    [
                        36,
                        "      version               = \"1.0\"\n"
                    ],
                    [
                        37,
                        "      retention_policy_days = 10\n"
                    ],
                    [
                        38,
                        "    }\n"
                    ],
                    [
                        39,
                        "  }\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    13,
                    40
                ],
                "resource": "azurerm_storage_account.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tgsa${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_storage_account/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountsTransportEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled"
            },
            {
                "check_id": "CKV_AZURE_36",
                "check_name": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        42,
                        "resource \"azurerm_storage_account_network_rules\" \"test\" {\n"
                    ],
                    [
                        43,
                        "  resource_group_name  = azurerm_resource_group.example.name\n"
                    ],
                    [
                        44,
                        "  storage_account_name = azurerm_storage_account.example.name\n"
                    ],
                    [
                        45,
                        "\n"
                    ],
                    [
                        46,
                        "  default_action = \"Deny\"\n"
                    ],
                    [
                        47,
                        "  ip_rules       = [\"127.0.0.1\"]\n"
                    ],
                    [
                        48,
                        "  bypass         = [\"Metrics\"]\n"
                    ],
                    [
                        49,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/storage.tf",
                "repo_file_path": "/terraform/azure/storage.tf",
                "file_line_range": [
                    42,
                    49
                ],
                "resource": "azurerm_storage_account_network_rules.test",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountAzureServicesAccessEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access"
            },
            {
                "check_id": "CKV_AZURE_23",
                "check_name": "Ensure that 'Auditing' is set to 'On' for SQL servers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "extended_auditing_policy"
                    ]
                },
                "code_block": [
                    [
                        9,
                        "resource \"azurerm_sql_server\" \"example\" {\n"
                    ],
                    [
                        10,
                        "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        11,
                        "  resource_group_name          = azurerm_resource_group.example.name\n"
                    ],
                    [
                        12,
                        "  location                     = azurerm_resource_group.example.location\n"
                    ],
                    [
                        13,
                        "  version                      = \"12.0\"\n"
                    ],
                    [
                        14,
                        "  administrator_login          = \"ariel\"\n"
                    ],
                    [
                        15,
                        "  administrator_login_password = \"Aa12345678\"\n"
                    ],
                    [
                        16,
                        "  tags = {\n"
                    ],
                    [
                        17,
                        "    environment = var.environment\n"
                    ],
                    [
                        18,
                        "    terragoat   = \"true\"\n"
                    ],
                    [
                        19,
                        "  }\n"
                    ],
                    [
                        20,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    9,
                    20
                ],
                "resource": "azurerm_sql_server.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_sql_server/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.SQLServerAuditingEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_logging_2"
            },
            {
                "check_id": "CKV_AZURE_24",
                "check_name": "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        9,
                        "resource \"azurerm_sql_server\" \"example\" {\n"
                    ],
                    [
                        10,
                        "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        11,
                        "  resource_group_name          = azurerm_resource_group.example.name\n"
                    ],
                    [
                        12,
                        "  location                     = azurerm_resource_group.example.location\n"
                    ],
                    [
                        13,
                        "  version                      = \"12.0\"\n"
                    ],
                    [
                        14,
                        "  administrator_login          = \"ariel\"\n"
                    ],
                    [
                        15,
                        "  administrator_login_password = \"Aa12345678\"\n"
                    ],
                    [
                        16,
                        "  tags = {\n"
                    ],
                    [
                        17,
                        "    environment = var.environment\n"
                    ],
                    [
                        18,
                        "    terragoat   = \"true\"\n"
                    ],
                    [
                        19,
                        "  }\n"
                    ],
                    [
                        20,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    9,
                    20
                ],
                "resource": "azurerm_sql_server.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_sql_server/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.SQLServerAuditingRetention90Days",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_logging_3"
            },
            {
                "check_id": "CKV_AZURE_27",
                "check_name": "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "email_account_admins"
                    ]
                },
                "code_block": [
                    [
                        22,
                        "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n"
                    ],
                    [
                        23,
                        "  resource_group_name        = azurerm_resource_group.example.name\n"
                    ],
                    [
                        24,
                        "  server_name                = azurerm_sql_server.example.name\n"
                    ],
                    [
                        25,
                        "  state                      = \"Enabled\"\n"
                    ],
                    [
                        26,
                        "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n"
                    ],
                    [
                        27,
                        "  storage_account_access_key = azurerm_storage_account.example.primary_access_key\n"
                    ],
                    [
                        28,
                        "  disabled_alerts = [\n"
                    ],
                    [
                        29,
                        "    \"Sql_Injection\",\n"
                    ],
                    [
                        30,
                        "    \"Data_Exfiltration\"\n"
                    ],
                    [
                        31,
                        "  ]\n"
                    ],
                    [
                        32,
                        "  retention_days = 20\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    22,
                    33
                ],
                "resource": "azurerm_mssql_server_security_alert_policy.example",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.SQLServerEmailAlertsToAdminsEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_8"
            },
            {
                "check_id": "CKV_AZURE_25",
                "check_name": "Ensure that 'Threat Detection types' is set to 'All'",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        22,
                        "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n"
                    ],
                    [
                        23,
                        "  resource_group_name        = azurerm_resource_group.example.name\n"
                    ],
                    [
                        24,
                        "  server_name                = azurerm_sql_server.example.name\n"
                    ],
                    [
                        25,
                        "  state                      = \"Enabled\"\n"
                    ],
                    [
                        26,
                        "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n"
                    ],
                    [
                        27,
                        "  storage_account_access_key = azurerm_storage_account.example.primary_access_key\n"
                    ],
                    [
                        28,
                        "  disabled_alerts = [\n"
                    ],
                    [
                        29,
                        "    \"Sql_Injection\",\n"
                    ],
                    [
                        30,
                        "    \"Data_Exfiltration\"\n"
                    ],
                    [
                        31,
                        "  ]\n"
                    ],
                    [
                        32,
                        "  retention_days = 20\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    22,
                    33
                ],
                "resource": "azurerm_mssql_server_security_alert_policy.example",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.SQLServerThreatDetectionTypes",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_6"
            },
            {
                "check_id": "CKV_AZURE_26",
                "check_name": "Ensure that 'Send Alerts To' is enabled for MSSQL servers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "email_addresses"
                    ]
                },
                "code_block": [
                    [
                        22,
                        "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n"
                    ],
                    [
                        23,
                        "  resource_group_name        = azurerm_resource_group.example.name\n"
                    ],
                    [
                        24,
                        "  server_name                = azurerm_sql_server.example.name\n"
                    ],
                    [
                        25,
                        "  state                      = \"Enabled\"\n"
                    ],
                    [
                        26,
                        "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n"
                    ],
                    [
                        27,
                        "  storage_account_access_key = azurerm_storage_account.example.primary_access_key\n"
                    ],
                    [
                        28,
                        "  disabled_alerts = [\n"
                    ],
                    [
                        29,
                        "    \"Sql_Injection\",\n"
                    ],
                    [
                        30,
                        "    \"Data_Exfiltration\"\n"
                    ],
                    [
                        31,
                        "  ]\n"
                    ],
                    [
                        32,
                        "  retention_days = 20\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    22,
                    33
                ],
                "resource": "azurerm_mssql_server_security_alert_policy.example",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.SQLServerEmailAlertsEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_7"
            },
            {
                "check_id": "CKV_AZURE_53",
                "check_name": "Ensure 'public network access enabled' is set to 'False' for mySQL servers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "public_network_access_enabled"
                    ]
                },
                "code_block": [
                    [
                        35,
                        "resource \"azurerm_mysql_server\" \"example\" {\n"
                    ],
                    [
                        36,
                        "  name                = \"terragoat-mysql-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        37,
                        "  location            = azurerm_resource_group.example.location\n"
                    ],
                    [
                        38,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        39,
                        "\n"
                    ],
                    [
                        40,
                        "  administrator_login          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        41,
                        "  administrator_login_password = random_string.password.result\n"
                    ],
                    [
                        42,
                        "\n"
                    ],
                    [
                        43,
                        "  sku_name   = \"B_Gen5_2\"\n"
                    ],
                    [
                        44,
                        "  storage_mb = 5120\n"
                    ],
                    [
                        45,
                        "  version    = \"5.7\"\n"
                    ],
                    [
                        46,
                        "\n"
                    ],
                    [
                        47,
                        "  auto_grow_enabled                 = true\n"
                    ],
                    [
                        48,
                        "  backup_retention_days             = 7\n"
                    ],
                    [
                        49,
                        "  infrastructure_encryption_enabled = true\n"
                    ],
                    [
                        50,
                        "  public_network_access_enabled     = true\n"
                    ],
                    [
                        51,
                        "  ssl_enforcement_enabled           = false\n"
                    ],
                    [
                        52,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    35,
                    52
                ],
                "resource": "azurerm_mysql_server.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-mysql-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/3/azurerm_mysql_server/example/name/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/3/azurerm_mysql_server/example/administrator_login/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.MySQLPublicAccessDisabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AZURE_54",
                "check_name": "Ensure MySQL is using the latest version of TLS encryption",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ssl_minimal_tls_version_enforced"
                    ]
                },
                "code_block": [
                    [
                        35,
                        "resource \"azurerm_mysql_server\" \"example\" {\n"
                    ],
                    [
                        36,
                        "  name                = \"terragoat-mysql-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        37,
                        "  location            = azurerm_resource_group.example.location\n"
                    ],
                    [
                        38,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        39,
                        "\n"
                    ],
                    [
                        40,
                        "  administrator_login          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        41,
                        "  administrator_login_password = random_string.password.result\n"
                    ],
                    [
                        42,
                        "\n"
                    ],
                    [
                        43,
                        "  sku_name   = \"B_Gen5_2\"\n"
                    ],
                    [
                        44,
                        "  storage_mb = 5120\n"
                    ],
                    [
                        45,
                        "  version    = \"5.7\"\n"
                    ],
                    [
                        46,
                        "\n"
                    ],
                    [
                        47,
                        "  auto_grow_enabled                 = true\n"
                    ],
                    [
                        48,
                        "  backup_retention_days             = 7\n"
                    ],
                    [
                        49,
                        "  infrastructure_encryption_enabled = true\n"
                    ],
                    [
                        50,
                        "  public_network_access_enabled     = true\n"
                    ],
                    [
                        51,
                        "  ssl_enforcement_enabled           = false\n"
                    ],
                    [
                        52,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    35,
                    52
                ],
                "resource": "azurerm_mysql_server.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-mysql-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/3/azurerm_mysql_server/example/name/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/3/azurerm_mysql_server/example/administrator_login/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.MySQLServerMinTLSVersion",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AZURE_28",
                "check_name": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ssl_enforcement_enabled"
                    ]
                },
                "code_block": [
                    [
                        35,
                        "resource \"azurerm_mysql_server\" \"example\" {\n"
                    ],
                    [
                        36,
                        "  name                = \"terragoat-mysql-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        37,
                        "  location            = azurerm_resource_group.example.location\n"
                    ],
                    [
                        38,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        39,
                        "\n"
                    ],
                    [
                        40,
                        "  administrator_login          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        41,
                        "  administrator_login_password = random_string.password.result\n"
                    ],
                    [
                        42,
                        "\n"
                    ],
                    [
                        43,
                        "  sku_name   = \"B_Gen5_2\"\n"
                    ],
                    [
                        44,
                        "  storage_mb = 5120\n"
                    ],
                    [
                        45,
                        "  version    = \"5.7\"\n"
                    ],
                    [
                        46,
                        "\n"
                    ],
                    [
                        47,
                        "  auto_grow_enabled                 = true\n"
                    ],
                    [
                        48,
                        "  backup_retention_days             = 7\n"
                    ],
                    [
                        49,
                        "  infrastructure_encryption_enabled = true\n"
                    ],
                    [
                        50,
                        "  public_network_access_enabled     = true\n"
                    ],
                    [
                        51,
                        "  ssl_enforcement_enabled           = false\n"
                    ],
                    [
                        52,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    35,
                    52
                ],
                "resource": "azurerm_mysql_server.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-mysql-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/3/azurerm_mysql_server/example/name/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/3/azurerm_mysql_server/example/administrator_login/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.MySQLServerSSLEnforcementEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_9"
            },
            {
                "check_id": "CKV_AZURE_29",
                "check_name": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ssl_enforcement_enabled"
                    ]
                },
                "code_block": [
                    [
                        54,
                        "resource \"azurerm_postgresql_server\" \"example\" {\n"
                    ],
                    [
                        55,
                        "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        56,
                        "  location                     = azurerm_resource_group.example.location\n"
                    ],
                    [
                        57,
                        "  resource_group_name          = azurerm_resource_group.example.name\n"
                    ],
                    [
                        58,
                        "  sku_name                     = \"B_Gen5_2\"\n"
                    ],
                    [
                        59,
                        "  storage_mb                   = 5120\n"
                    ],
                    [
                        60,
                        "  backup_retention_days        = 7\n"
                    ],
                    [
                        61,
                        "  geo_redundant_backup_enabled = false\n"
                    ],
                    [
                        62,
                        "  auto_grow_enabled            = true\n"
                    ],
                    [
                        63,
                        "  administrator_login          = \"terragoat\"\n"
                    ],
                    [
                        64,
                        "  administrator_login_password = \"Aa12345678\"\n"
                    ],
                    [
                        65,
                        "  version                      = \"9.5\"\n"
                    ],
                    [
                        66,
                        "  ssl_enforcement_enabled      = false\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    54,
                    67
                ],
                "resource": "azurerm_postgresql_server.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/4/azurerm_postgresql_server/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerSSLEnforcementEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_10"
            },
            {
                "check_id": "CKV_AZURE_32",
                "check_name": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        69,
                        "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {\n"
                    ],
                    [
                        70,
                        "  name                = \"connection_throttling\"\n"
                    ],
                    [
                        71,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        72,
                        "  server_name         = azurerm_postgresql_server.example.name\n"
                    ],
                    [
                        73,
                        "  value               = \"off\"\n"
                    ],
                    [
                        74,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    69,
                    74
                ],
                "resource": "azurerm_postgresql_configuration.thrtottling_config",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerConnectionThrottlingEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_13"
            },
            {
                "check_id": "CKV_AZURE_30",
                "check_name": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        76,
                        "resource \"azurerm_postgresql_configuration\" \"example\" {\n"
                    ],
                    [
                        77,
                        "  name                = \"log_checkpoints\"\n"
                    ],
                    [
                        78,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        79,
                        "  server_name         = azurerm_postgresql_server.example.name\n"
                    ],
                    [
                        80,
                        "  value               = \"off\"\n"
                    ],
                    [
                        81,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/sql.tf",
                "repo_file_path": "/terraform/azure/sql.tf",
                "file_line_range": [
                    76,
                    81
                ],
                "resource": "azurerm_postgresql_configuration.example",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.PostgreSQLServerLogCheckpointsEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_11"
            },
            {
                "check_id": "CKV_AZURE_19",
                "check_name": "Ensure that standard pricing tier is selected",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "tier"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_security_center_subscription_pricing \"pricing\" {\n"
                    ],
                    [
                        2,
                        "  tier = \"Free\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/security_center.tf",
                "repo_file_path": "/terraform/azure/security_center.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "azurerm_security_center_subscription_pricing.pricing",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.SecurityCenterStandardPricing",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected"
            },
            {
                "check_id": "CKV_AZURE_21",
                "check_name": "Ensure that 'Send email notification for high severity alerts' is set to 'On'",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "alert_notifications"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource azurerm_security_center_contact \"contact\" {\n"
                    ],
                    [
                        6,
                        "  alert_notifications = false\n"
                    ],
                    [
                        7,
                        "  alerts_to_admins    = false\n"
                    ],
                    [
                        8,
                        "  email               = \"some@email.com\"\n"
                    ],
                    [
                        9,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/security_center.tf",
                "repo_file_path": "/terraform/azure/security_center.tf",
                "file_line_range": [
                    5,
                    9
                ],
                "resource": "azurerm_security_center_contact.contact",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.SecurityCenterContactEmailAlert",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_4"
            },
            {
                "check_id": "CKV_AZURE_22",
                "check_name": "Ensure that 'Send email notification for high severity alerts' is set to 'On'",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "alerts_to_admins"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource azurerm_security_center_contact \"contact\" {\n"
                    ],
                    [
                        6,
                        "  alert_notifications = false\n"
                    ],
                    [
                        7,
                        "  alerts_to_admins    = false\n"
                    ],
                    [
                        8,
                        "  email               = \"some@email.com\"\n"
                    ],
                    [
                        9,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/security_center.tf",
                "repo_file_path": "/terraform/azure/security_center.tf",
                "file_line_range": [
                    5,
                    9
                ],
                "resource": "azurerm_security_center_contact.contact",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.SecurityCenterContactEmailAlertAdmins",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_5"
            },
            {
                "check_id": "CKV_AZURE_20",
                "check_name": "Ensure that security contact 'Phone number' is set",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "phone"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource azurerm_security_center_contact \"contact\" {\n"
                    ],
                    [
                        6,
                        "  alert_notifications = false\n"
                    ],
                    [
                        7,
                        "  alerts_to_admins    = false\n"
                    ],
                    [
                        8,
                        "  email               = \"some@email.com\"\n"
                    ],
                    [
                        9,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/security_center.tf",
                "repo_file_path": "/terraform/azure/security_center.tf",
                "file_line_range": [
                    5,
                    9
                ],
                "resource": "azurerm_security_center_contact.contact",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.SecurityCenterContactPhone",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_3"
            },
            {
                "check_id": "CKV_AZURE_9",
                "check_name": "Ensure that RDP access is restricted from the internet",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        39,
                        "resource azurerm_network_security_group \"bad_sg\" {\n"
                    ],
                    [
                        40,
                        "  location            = var.location\n"
                    ],
                    [
                        41,
                        "  name                = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        42,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        43,
                        "\n"
                    ],
                    [
                        44,
                        "  security_rule {\n"
                    ],
                    [
                        45,
                        "    access                 = \"Allow\"\n"
                    ],
                    [
                        46,
                        "    direction              = \"Inbound\"\n"
                    ],
                    [
                        47,
                        "    name                   = \"AllowSSH\"\n"
                    ],
                    [
                        48,
                        "    priority               = 200\n"
                    ],
                    [
                        49,
                        "    protocol               = \"TCP\"\n"
                    ],
                    [
                        50,
                        "    source_address_prefix  = \"*\"\n"
                    ],
                    [
                        51,
                        "    source_port_range      = \"*\"\n"
                    ],
                    [
                        52,
                        "    destination_port_range = \"22-22\"\n"
                    ],
                    [
                        53,
                        "    destination_address_prefix = \"*\"\n"
                    ],
                    [
                        54,
                        "  }\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  security_rule {\n"
                    ],
                    [
                        57,
                        "    access                 = \"Allow\"\n"
                    ],
                    [
                        58,
                        "    direction              = \"Inbound\"\n"
                    ],
                    [
                        59,
                        "    name                   = \"AllowRDP\"\n"
                    ],
                    [
                        60,
                        "    priority               = 300\n"
                    ],
                    [
                        61,
                        "    protocol               = \"TCP\"\n"
                    ],
                    [
                        62,
                        "    source_address_prefix  = \"*\"\n"
                    ],
                    [
                        63,
                        "    source_port_range      = \"*\"\n"
                    ],
                    [
                        64,
                        "    destination_port_range = \"3389-3389\"\n"
                    ],
                    [
                        65,
                        "    destination_address_prefix = \"*\"\n"
                    ],
                    [
                        66,
                        "  }\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/networking.tf",
                "repo_file_path": "/terraform/azure/networking.tf",
                "file_line_range": [
                    39,
                    67
                ],
                "resource": "azurerm_network_security_group.bad_sg",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/4/azurerm_network_security_group/bad_sg/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/4/azurerm_network_security_group/bad_sg/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.NSGRuleRDPAccessRestricted",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_2"
            },
            {
                "check_id": "CKV_AZURE_10",
                "check_name": "Ensure that SSH access is restricted from the internet",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        39,
                        "resource azurerm_network_security_group \"bad_sg\" {\n"
                    ],
                    [
                        40,
                        "  location            = var.location\n"
                    ],
                    [
                        41,
                        "  name                = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        42,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        43,
                        "\n"
                    ],
                    [
                        44,
                        "  security_rule {\n"
                    ],
                    [
                        45,
                        "    access                 = \"Allow\"\n"
                    ],
                    [
                        46,
                        "    direction              = \"Inbound\"\n"
                    ],
                    [
                        47,
                        "    name                   = \"AllowSSH\"\n"
                    ],
                    [
                        48,
                        "    priority               = 200\n"
                    ],
                    [
                        49,
                        "    protocol               = \"TCP\"\n"
                    ],
                    [
                        50,
                        "    source_address_prefix  = \"*\"\n"
                    ],
                    [
                        51,
                        "    source_port_range      = \"*\"\n"
                    ],
                    [
                        52,
                        "    destination_port_range = \"22-22\"\n"
                    ],
                    [
                        53,
                        "    destination_address_prefix = \"*\"\n"
                    ],
                    [
                        54,
                        "  }\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  security_rule {\n"
                    ],
                    [
                        57,
                        "    access                 = \"Allow\"\n"
                    ],
                    [
                        58,
                        "    direction              = \"Inbound\"\n"
                    ],
                    [
                        59,
                        "    name                   = \"AllowRDP\"\n"
                    ],
                    [
                        60,
                        "    priority               = 300\n"
                    ],
                    [
                        61,
                        "    protocol               = \"TCP\"\n"
                    ],
                    [
                        62,
                        "    source_address_prefix  = \"*\"\n"
                    ],
                    [
                        63,
                        "    source_port_range      = \"*\"\n"
                    ],
                    [
                        64,
                        "    destination_port_range = \"3389-3389\"\n"
                    ],
                    [
                        65,
                        "    destination_address_prefix = \"*\"\n"
                    ],
                    [
                        66,
                        "  }\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/networking.tf",
                "repo_file_path": "/terraform/azure/networking.tf",
                "file_line_range": [
                    39,
                    67
                ],
                "resource": "azurerm_network_security_group.bad_sg",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/4/azurerm_network_security_group/bad_sg/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/4/azurerm_network_security_group/bad_sg/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.NSGRuleSSHAccessRestricted",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_3"
            },
            {
                "check_id": "CKV_AZURE_12",
                "check_name": "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        75,
                        "resource azurerm_network_watcher_flow_log \"flow_log\" {\n"
                    ],
                    [
                        76,
                        "  enabled                   = false\n"
                    ],
                    [
                        77,
                        "  network_security_group_id = azurerm_network_security_group.bad_sg.id\n"
                    ],
                    [
                        78,
                        "  network_watcher_name      = azurerm_network_watcher.network_watcher.name\n"
                    ],
                    [
                        79,
                        "  resource_group_name       = azurerm_resource_group.example.name\n"
                    ],
                    [
                        80,
                        "  storage_account_id        = azurerm_storage_account.example.id\n"
                    ],
                    [
                        81,
                        "  retention_policy {\n"
                    ],
                    [
                        82,
                        "    enabled = false\n"
                    ],
                    [
                        83,
                        "    days    = 10\n"
                    ],
                    [
                        84,
                        "  }\n"
                    ],
                    [
                        85,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/networking.tf",
                "repo_file_path": "/terraform/azure/networking.tf",
                "file_line_range": [
                    75,
                    85
                ],
                "resource": "azurerm_network_watcher_flow_log.flow_log",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.azure.NetworkWatcherFlowLogPeriod",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_logging_1"
            },
            {
                "check_id": "CKV_AZURE_1",
                "check_name": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        9,
                        "resource azurerm_linux_virtual_machine \"linux_machine\" {\n"
                    ],
                    [
                        10,
                        "  admin_username                  = \"terragoat-linux\"\n"
                    ],
                    [
                        11,
                        "  admin_password                  = random_string.password.result\n"
                    ],
                    [
                        12,
                        "  location                        = var.location\n"
                    ],
                    [
                        13,
                        "  name                            = \"terragoat-linux\"\n"
                    ],
                    [
                        14,
                        "  network_interface_ids           = [azurerm_network_interface.ni_linux.id]\n"
                    ],
                    [
                        15,
                        "  resource_group_name             = azurerm_resource_group.example.name\n"
                    ],
                    [
                        16,
                        "  size                            = \"Standard_F2\"\n"
                    ],
                    [
                        17,
                        "  disable_password_authentication = false\n"
                    ],
                    [
                        18,
                        "  source_image_reference {\n"
                    ],
                    [
                        19,
                        "    publisher = \"Canonical\"\n"
                    ],
                    [
                        20,
                        "    offer     = \"UbuntuServer\"\n"
                    ],
                    [
                        21,
                        "    sku       = \"16.04-LTS\"\n"
                    ],
                    [
                        22,
                        "    version   = \"latest\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "  os_disk {\n"
                    ],
                    [
                        25,
                        "    caching              = \"ReadWrite\"\n"
                    ],
                    [
                        26,
                        "    storage_account_type = \"Standard_LRS\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  tags = {\n"
                    ],
                    [
                        30,
                        "    terragoat   = true\n"
                    ],
                    [
                        31,
                        "    environment = var.environment\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/instance.tf",
                "repo_file_path": "/terraform/azure/instance.tf",
                "file_line_range": [
                    9,
                    33
                ],
                "resource": "azurerm_linux_virtual_machine.linux_machine",
                "evaluations": {
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_linux_virtual_machine/linux_machine/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AzureInstancePassword",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_1"
            },
            {
                "check_id": "CKV_AZURE_42",
                "check_name": "Ensure the key vault is recoverable",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"azurerm_key_vault\" \"example\" {\n"
                    ],
                    [
                        2,
                        "  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        3,
                        "  location            = azurerm_resource_group.example.location\n"
                    ],
                    [
                        4,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        5,
                        "  tenant_id           = data.azurerm_client_config.current.tenant_id\n"
                    ],
                    [
                        6,
                        "  sku_name            = \"premium\"\n"
                    ],
                    [
                        7,
                        "  access_policy {\n"
                    ],
                    [
                        8,
                        "    tenant_id = data.azurerm_client_config.current.tenant_id\n"
                    ],
                    [
                        9,
                        "    object_id = data.azurerm_client_config.current.object_id\n"
                    ],
                    [
                        10,
                        "    key_permissions = [\n"
                    ],
                    [
                        11,
                        "      \"create\",\n"
                    ],
                    [
                        12,
                        "      \"get\",\n"
                    ],
                    [
                        13,
                        "    ]\n"
                    ],
                    [
                        14,
                        "    secret_permissions = [\n"
                    ],
                    [
                        15,
                        "      \"set\",\n"
                    ],
                    [
                        16,
                        "    ]\n"
                    ],
                    [
                        17,
                        "  }\n"
                    ],
                    [
                        18,
                        "  tags = {\n"
                    ],
                    [
                        19,
                        "    environment = var.environment\n"
                    ],
                    [
                        20,
                        "    terragoat   = true\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/key_vault.tf",
                "repo_file_path": "/terraform/azure/key_vault.tf",
                "file_line_range": [
                    1,
                    22
                ],
                "resource": "azurerm_key_vault.example",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-key-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/0/azurerm_key_vault/example/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.KeyvaultRecoveryEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable"
            },
            {
                "check_id": "CKV_AZURE_40",
                "check_name": "Ensure that the expiration date is set on all keys",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "expiration_date"
                    ]
                },
                "code_block": [
                    [
                        24,
                        "resource \"azurerm_key_vault_key\" \"generated\" {\n"
                    ],
                    [
                        25,
                        "  name         = \"terragoat-generated-certificate-${var.environment}\"\n"
                    ],
                    [
                        26,
                        "  key_vault_id = azurerm_key_vault.example.id\n"
                    ],
                    [
                        27,
                        "  key_type     = \"RSA\"\n"
                    ],
                    [
                        28,
                        "  key_size     = 2048\n"
                    ],
                    [
                        29,
                        "  key_opts = [\n"
                    ],
                    [
                        30,
                        "    \"decrypt\",\n"
                    ],
                    [
                        31,
                        "    \"encrypt\",\n"
                    ],
                    [
                        32,
                        "    \"sign\",\n"
                    ],
                    [
                        33,
                        "    \"unwrapKey\",\n"
                    ],
                    [
                        34,
                        "    \"verify\",\n"
                    ],
                    [
                        35,
                        "    \"wrapKey\",\n"
                    ],
                    [
                        36,
                        "  ]\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/key_vault.tf",
                "repo_file_path": "/terraform/azure/key_vault.tf",
                "file_line_range": [
                    24,
                    37
                ],
                "resource": "azurerm_key_vault_key.generated",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-generated-certificate-${var.environment}",
                                "definition_path": "resource/1/azurerm_key_vault_key/generated/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.KeyExpirationDate",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-keys"
            },
            {
                "check_id": "CKV_AZURE_41",
                "check_name": "Ensure that the expiration date is set on all secrets",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "expiration_date"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"azurerm_key_vault_secret\" \"secret\" {\n"
                    ],
                    [
                        40,
                        "  key_vault_id = azurerm_key_vault.example.id\n"
                    ],
                    [
                        41,
                        "  name         = \"terragoat-secret-${var.environment}\"\n"
                    ],
                    [
                        42,
                        "  value        = random_string.password.result\n"
                    ],
                    [
                        43,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/key_vault.tf",
                "repo_file_path": "/terraform/azure/key_vault.tf",
                "file_line_range": [
                    39,
                    43
                ],
                "resource": "azurerm_key_vault_secret.secret",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-secret-${var.environment}",
                                "definition_path": "resource/2/azurerm_key_vault_secret/secret/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.SecretExpirationDate",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets"
            },
            {
                "check_id": "CKV_AZURE_7",
                "check_name": "Ensure AKS cluster has Network Policy configured",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "network_profile/[0]/network_policy"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                    ],
                    [
                        2,
                        "  dns_prefix          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  location            = var.location\n"
                    ],
                    [
                        4,
                        "  name                = \"terragoat-aks-${var.environment}\"\n"
                    ],
                    [
                        5,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        6,
                        "  identity {\n"
                    ],
                    [
                        7,
                        "    type = \"SystemAssigned\"\n"
                    ],
                    [
                        8,
                        "  }\n"
                    ],
                    [
                        9,
                        "  default_node_pool {\n"
                    ],
                    [
                        10,
                        "    name       = \"default\"\n"
                    ],
                    [
                        11,
                        "    vm_size    = \"Standard_D2_v2\"\n"
                    ],
                    [
                        12,
                        "    node_count = 2\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "  addon_profile {\n"
                    ],
                    [
                        15,
                        "    oms_agent {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "    kube_dashboard {\n"
                    ],
                    [
                        19,
                        "      enabled = true\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "  role_based_access_control {\n"
                    ],
                    [
                        23,
                        "    enabled = false\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/aks.tf",
                "repo_file_path": "/terraform/azure/aks.tf",
                "file_line_range": [
                    1,
                    25
                ],
                "resource": "azurerm_kubernetes_cluster.k8s_cluster",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/dns_prefix/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-aks-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AKSNetworkPolicy",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4"
            },
            {
                "check_id": "CKV_AZURE_8",
                "check_name": "Ensure Kube Dashboard is disabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                    ],
                    [
                        2,
                        "  dns_prefix          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  location            = var.location\n"
                    ],
                    [
                        4,
                        "  name                = \"terragoat-aks-${var.environment}\"\n"
                    ],
                    [
                        5,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        6,
                        "  identity {\n"
                    ],
                    [
                        7,
                        "    type = \"SystemAssigned\"\n"
                    ],
                    [
                        8,
                        "  }\n"
                    ],
                    [
                        9,
                        "  default_node_pool {\n"
                    ],
                    [
                        10,
                        "    name       = \"default\"\n"
                    ],
                    [
                        11,
                        "    vm_size    = \"Standard_D2_v2\"\n"
                    ],
                    [
                        12,
                        "    node_count = 2\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "  addon_profile {\n"
                    ],
                    [
                        15,
                        "    oms_agent {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "    kube_dashboard {\n"
                    ],
                    [
                        19,
                        "      enabled = true\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "  role_based_access_control {\n"
                    ],
                    [
                        23,
                        "    enabled = false\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/aks.tf",
                "repo_file_path": "/terraform/azure/aks.tf",
                "file_line_range": [
                    1,
                    25
                ],
                "resource": "azurerm_kubernetes_cluster.k8s_cluster",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/dns_prefix/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-aks-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AKSDashboardDisabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5"
            },
            {
                "check_id": "CKV_AZURE_5",
                "check_name": "Ensure RBAC is enabled on AKS clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "role_based_access_control/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                    ],
                    [
                        2,
                        "  dns_prefix          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  location            = var.location\n"
                    ],
                    [
                        4,
                        "  name                = \"terragoat-aks-${var.environment}\"\n"
                    ],
                    [
                        5,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        6,
                        "  identity {\n"
                    ],
                    [
                        7,
                        "    type = \"SystemAssigned\"\n"
                    ],
                    [
                        8,
                        "  }\n"
                    ],
                    [
                        9,
                        "  default_node_pool {\n"
                    ],
                    [
                        10,
                        "    name       = \"default\"\n"
                    ],
                    [
                        11,
                        "    vm_size    = \"Standard_D2_v2\"\n"
                    ],
                    [
                        12,
                        "    node_count = 2\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "  addon_profile {\n"
                    ],
                    [
                        15,
                        "    oms_agent {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "    kube_dashboard {\n"
                    ],
                    [
                        19,
                        "      enabled = true\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "  role_based_access_control {\n"
                    ],
                    [
                        23,
                        "    enabled = false\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/aks.tf",
                "repo_file_path": "/terraform/azure/aks.tf",
                "file_line_range": [
                    1,
                    25
                ],
                "resource": "azurerm_kubernetes_cluster.k8s_cluster",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/dns_prefix/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-aks-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AKSRbacEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2"
            },
            {
                "check_id": "CKV_AZURE_4",
                "check_name": "Ensure AKS logging to Azure Monitoring is Configured",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "addon_profile/[0]/oms_agent/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                    ],
                    [
                        2,
                        "  dns_prefix          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  location            = var.location\n"
                    ],
                    [
                        4,
                        "  name                = \"terragoat-aks-${var.environment}\"\n"
                    ],
                    [
                        5,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        6,
                        "  identity {\n"
                    ],
                    [
                        7,
                        "    type = \"SystemAssigned\"\n"
                    ],
                    [
                        8,
                        "  }\n"
                    ],
                    [
                        9,
                        "  default_node_pool {\n"
                    ],
                    [
                        10,
                        "    name       = \"default\"\n"
                    ],
                    [
                        11,
                        "    vm_size    = \"Standard_D2_v2\"\n"
                    ],
                    [
                        12,
                        "    node_count = 2\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "  addon_profile {\n"
                    ],
                    [
                        15,
                        "    oms_agent {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "    kube_dashboard {\n"
                    ],
                    [
                        19,
                        "      enabled = true\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "  role_based_access_control {\n"
                    ],
                    [
                        23,
                        "    enabled = false\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/aks.tf",
                "repo_file_path": "/terraform/azure/aks.tf",
                "file_line_range": [
                    1,
                    25
                ],
                "resource": "azurerm_kubernetes_cluster.k8s_cluster",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/dns_prefix/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-aks-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AKSLoggingEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1"
            },
            {
                "check_id": "CKV_AZURE_6",
                "check_name": "Ensure AKS has an API Server Authorized IP Ranges enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "api_server_authorized_ip_ranges/[0]"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                    ],
                    [
                        2,
                        "  dns_prefix          = \"terragoat-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  location            = var.location\n"
                    ],
                    [
                        4,
                        "  name                = \"terragoat-aks-${var.environment}\"\n"
                    ],
                    [
                        5,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        6,
                        "  identity {\n"
                    ],
                    [
                        7,
                        "    type = \"SystemAssigned\"\n"
                    ],
                    [
                        8,
                        "  }\n"
                    ],
                    [
                        9,
                        "  default_node_pool {\n"
                    ],
                    [
                        10,
                        "    name       = \"default\"\n"
                    ],
                    [
                        11,
                        "    vm_size    = \"Standard_D2_v2\"\n"
                    ],
                    [
                        12,
                        "    node_count = 2\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "  addon_profile {\n"
                    ],
                    [
                        15,
                        "    oms_agent {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "    kube_dashboard {\n"
                    ],
                    [
                        19,
                        "      enabled = true\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "  role_based_access_control {\n"
                    ],
                    [
                        23,
                        "    enabled = false\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}"
                    ]
                ],
                "file_path": "/terraform/azure/aks.tf",
                "repo_file_path": "/terraform/azure/aks.tf",
                "file_line_range": [
                    1,
                    25
                ],
                "resource": "azurerm_kubernetes_cluster.k8s_cluster",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/dns_prefix/0"
                            },
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-aks-${var.environment}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/0/azurerm_kubernetes_cluster/k8s_cluster/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AKSApiServerAuthorizedIpRanges",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3"
            },
            {
                "check_id": "CKV_AZURE_18",
                "check_name": "Ensure that 'HTTP Version' is the latest if used to run the web app",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "site_config/[0]/http2_enabled"
                    ]
                },
                "code_block": [
                    [
                        12,
                        "resource azurerm_app_service \"app-service1\" {\n"
                    ],
                    [
                        13,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        14,
                        "  location            = var.location\n"
                    ],
                    [
                        15,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        16,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        17,
                        "  https_only          = false\n"
                    ],
                    [
                        18,
                        "  site_config {\n"
                    ],
                    [
                        19,
                        "    min_tls_version = \"1.1\"\n"
                    ],
                    [
                        20,
                        "  }\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    12,
                    21
                ],
                "resource": "azurerm_app_service.app-service1",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceHttps20Enabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_8"
            },
            {
                "check_id": "CKV_AZURE_17",
                "check_name": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "client_cert_enabled/[0]"
                    ]
                },
                "code_block": [
                    [
                        12,
                        "resource azurerm_app_service \"app-service1\" {\n"
                    ],
                    [
                        13,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        14,
                        "  location            = var.location\n"
                    ],
                    [
                        15,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        16,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        17,
                        "  https_only          = false\n"
                    ],
                    [
                        18,
                        "  site_config {\n"
                    ],
                    [
                        19,
                        "    min_tls_version = \"1.1\"\n"
                    ],
                    [
                        20,
                        "  }\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    12,
                    21
                ],
                "resource": "azurerm_app_service.app-service1",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServieClientCertificate",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_7"
            },
            {
                "check_id": "CKV_AZURE_15",
                "check_name": "Ensure web app is using the latest version of TLS encryption",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        12,
                        "resource azurerm_app_service \"app-service1\" {\n"
                    ],
                    [
                        13,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        14,
                        "  location            = var.location\n"
                    ],
                    [
                        15,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        16,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        17,
                        "  https_only          = false\n"
                    ],
                    [
                        18,
                        "  site_config {\n"
                    ],
                    [
                        19,
                        "    min_tls_version = \"1.1\"\n"
                    ],
                    [
                        20,
                        "  }\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    12,
                    21
                ],
                "resource": "azurerm_app_service.app-service1",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceMinTLSVersion",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_6"
            },
            {
                "check_id": "CKV_AZURE_14",
                "check_name": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "https_only/[0]"
                    ]
                },
                "code_block": [
                    [
                        12,
                        "resource azurerm_app_service \"app-service1\" {\n"
                    ],
                    [
                        13,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        14,
                        "  location            = var.location\n"
                    ],
                    [
                        15,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        16,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        17,
                        "  https_only          = false\n"
                    ],
                    [
                        18,
                        "  site_config {\n"
                    ],
                    [
                        19,
                        "    min_tls_version = \"1.1\"\n"
                    ],
                    [
                        20,
                        "  }\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    12,
                    21
                ],
                "resource": "azurerm_app_service.app-service1",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceHTTPSOnly",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_5"
            },
            {
                "check_id": "CKV_AZURE_13",
                "check_name": "Ensure App Service Authentication is set on Azure App Service",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "auth_settings/[0]/enabled/[0]"
                    ]
                },
                "code_block": [
                    [
                        12,
                        "resource azurerm_app_service \"app-service1\" {\n"
                    ],
                    [
                        13,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        14,
                        "  location            = var.location\n"
                    ],
                    [
                        15,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        16,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        17,
                        "  https_only          = false\n"
                    ],
                    [
                        18,
                        "  site_config {\n"
                    ],
                    [
                        19,
                        "    min_tls_version = \"1.1\"\n"
                    ],
                    [
                        20,
                        "  }\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    12,
                    21
                ],
                "resource": "azurerm_app_service.app-service1",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceAuthentication",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_2"
            },
            {
                "check_id": "CKV_AZURE_16",
                "check_name": "Ensure that Register with Azure Active Directory is enabled on App Service",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "identity"
                    ]
                },
                "code_block": [
                    [
                        12,
                        "resource azurerm_app_service \"app-service1\" {\n"
                    ],
                    [
                        13,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        14,
                        "  location            = var.location\n"
                    ],
                    [
                        15,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        16,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        17,
                        "  https_only          = false\n"
                    ],
                    [
                        18,
                        "  site_config {\n"
                    ],
                    [
                        19,
                        "    min_tls_version = \"1.1\"\n"
                    ],
                    [
                        20,
                        "  }\n"
                    ],
                    [
                        21,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    12,
                    21
                ],
                "resource": "azurerm_app_service.app-service1",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/1/azurerm_app_service/app-service1/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServieIdentity",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_iam_1"
            },
            {
                "check_id": "CKV_AZURE_18",
                "check_name": "Ensure that 'HTTP Version' is the latest if used to run the web app",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "site_config/[0]/http2_enabled"
                    ]
                },
                "code_block": [
                    [
                        23,
                        "resource azurerm_app_service \"app-service2\" {\n"
                    ],
                    [
                        24,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        25,
                        "  location            = var.location\n"
                    ],
                    [
                        26,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        27,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        28,
                        "  https_only          = true\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  auth_settings {\n"
                    ],
                    [
                        31,
                        "    enabled = false\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    23,
                    33
                ],
                "resource": "azurerm_app_service.app-service2",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceHttps20Enabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_8"
            },
            {
                "check_id": "CKV_AZURE_17",
                "check_name": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "client_cert_enabled/[0]"
                    ]
                },
                "code_block": [
                    [
                        23,
                        "resource azurerm_app_service \"app-service2\" {\n"
                    ],
                    [
                        24,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        25,
                        "  location            = var.location\n"
                    ],
                    [
                        26,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        27,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        28,
                        "  https_only          = true\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  auth_settings {\n"
                    ],
                    [
                        31,
                        "    enabled = false\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    23,
                    33
                ],
                "resource": "azurerm_app_service.app-service2",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServieClientCertificate",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_networking_7"
            },
            {
                "check_id": "CKV_AZURE_13",
                "check_name": "Ensure App Service Authentication is set on Azure App Service",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "auth_settings/[0]/enabled/[0]"
                    ]
                },
                "code_block": [
                    [
                        23,
                        "resource azurerm_app_service \"app-service2\" {\n"
                    ],
                    [
                        24,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        25,
                        "  location            = var.location\n"
                    ],
                    [
                        26,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        27,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        28,
                        "  https_only          = true\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  auth_settings {\n"
                    ],
                    [
                        31,
                        "    enabled = false\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    23,
                    33
                ],
                "resource": "azurerm_app_service.app-service2",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServiceAuthentication",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_general_2"
            },
            {
                "check_id": "CKV_AZURE_16",
                "check_name": "Ensure that Register with Azure Active Directory is enabled on App Service",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "identity"
                    ]
                },
                "code_block": [
                    [
                        23,
                        "resource azurerm_app_service \"app-service2\" {\n"
                    ],
                    [
                        24,
                        "  app_service_plan_id = azurerm_app_service_plan.example.id\n"
                    ],
                    [
                        25,
                        "  location            = var.location\n"
                    ],
                    [
                        26,
                        "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"\n"
                    ],
                    [
                        27,
                        "  resource_group_name = azurerm_resource_group.example.name\n"
                    ],
                    [
                        28,
                        "  https_only          = true\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  auth_settings {\n"
                    ],
                    [
                        31,
                        "    enabled = false\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/azure/app_service.tf",
                "repo_file_path": "/terraform/azure/app_service.tf",
                "file_line_range": [
                    23,
                    33
                ],
                "resource": "azurerm_app_service.app-service2",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-app-service-${var.environment}${random_integer.rnd_int.result}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/name/0"
                            }
                        ]
                    },
                    "location": {
                        "var_file": "variables.tf",
                        "value": "East US",
                        "definitions": [
                            {
                                "definition_name": "location",
                                "definition_expression": "${var.location}",
                                "definition_path": "resource/2/azurerm_app_service/app-service2/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.azure.AppServieIdentity",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_azr_iam_1"
            },
            {
                "check_id": "CKV_AWS_45",
                "check_name": "Ensure no hard-coded secrets exist in lambda environment",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "environment/[0]/variables"
                    ]
                },
                "code_block": [
                    [
                        21,
                        "resource \"aws_lambda_function\" \"analysis_lambda\" {\n"
                    ],
                    [
                        22,
                        "  # lambda have plain text secrets in environment variables\n"
                    ],
                    [
                        23,
                        "  filename      = \"resources/lambda_function_payload.zip\"\n"
                    ],
                    [
                        24,
                        "  function_name = \"${local.resource_prefix.value}-analysis\"\n"
                    ],
                    [
                        25,
                        "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"\n"
                    ],
                    [
                        26,
                        "  handler       = \"exports.test\"\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  runtime = \"nodejs12.x\"\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "  environment {\n"
                    ],
                    [
                        33,
                        "    variables = {\n"
                    ],
                    [
                        34,
                        "      access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        35,
                        "      secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        36,
                        "    }\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}"
                    ]
                ],
                "file_path": "/terraform/aws/lambda.tf",
                "repo_file_path": "/terraform/aws/lambda.tf",
                "file_line_range": [
                    21,
                    38
                ],
                "resource": "aws_lambda_function.analysis_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_3"
            },
            {
                "check_id": "CKV_AWS_50",
                "check_name": "X-ray tracing is enabled for Lambda",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "tracing_config/[0]/mode"
                    ]
                },
                "code_block": [
                    [
                        21,
                        "resource \"aws_lambda_function\" \"analysis_lambda\" {\n"
                    ],
                    [
                        22,
                        "  # lambda have plain text secrets in environment variables\n"
                    ],
                    [
                        23,
                        "  filename      = \"resources/lambda_function_payload.zip\"\n"
                    ],
                    [
                        24,
                        "  function_name = \"${local.resource_prefix.value}-analysis\"\n"
                    ],
                    [
                        25,
                        "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"\n"
                    ],
                    [
                        26,
                        "  handler       = \"exports.test\"\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  runtime = \"nodejs12.x\"\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "  environment {\n"
                    ],
                    [
                        33,
                        "    variables = {\n"
                    ],
                    [
                        34,
                        "      access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        35,
                        "      secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        36,
                        "    }\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}"
                    ]
                ],
                "file_path": "/terraform/aws/lambda.tf",
                "repo_file_path": "/terraform/aws/lambda.tf",
                "file_line_range": [
                    21,
                    38
                ],
                "resource": "aws_lambda_function.analysis_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_4"
            },
            {
                "check_id": "CKV_AWS_16",
                "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "storage_encrypted"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_db_instance\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  name                   = var.dbname\n"
                    ],
                    [
                        3,
                        "  engine                 = \"mysql\"\n"
                    ],
                    [
                        4,
                        "  option_group_name      = aws_db_option_group.default.name\n"
                    ],
                    [
                        5,
                        "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                    ],
                    [
                        6,
                        "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                    ],
                    [
                        7,
                        "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                    ],
                    [
                        10,
                        "  engine_version          = \"8.0\" # Latest major version \n"
                    ],
                    [
                        11,
                        "  instance_class          = \"db.t3.micro\"\n"
                    ],
                    [
                        12,
                        "  allocated_storage       = \"20\"\n"
                    ],
                    [
                        13,
                        "  username                = \"admin\"\n"
                    ],
                    [
                        14,
                        "  password                = var.password\n"
                    ],
                    [
                        15,
                        "  apply_immediately       = true\n"
                    ],
                    [
                        16,
                        "  multi_az                = false\n"
                    ],
                    [
                        17,
                        "  backup_retention_period = 0\n"
                    ],
                    [
                        18,
                        "  storage_encrypted       = false\n"
                    ],
                    [
                        19,
                        "  skip_final_snapshot     = true\n"
                    ],
                    [
                        20,
                        "  monitoring_interval     = 0\n"
                    ],
                    [
                        21,
                        "  publicly_accessible     = true\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "  tags = {\n"
                    ],
                    [
                        24,
                        "    Name        = \"${local.resource_prefix.value}-rds\"\n"
                    ],
                    [
                        25,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  # Ignore password changes from tf plan diff\n"
                    ],
                    [
                        29,
                        "  lifecycle {\n"
                    ],
                    [
                        30,
                        "    ignore_changes = [\"password\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    1,
                    32
                ],
                "resource": "aws_db_instance.default",
                "evaluations": {
                    "dbname": {
                        "var_file": "consts.tf",
                        "value": "db1",
                        "definitions": [
                            {
                                "definition_name": "dbname",
                                "definition_expression": "${var.dbname}",
                                "definition_path": "resource/0/aws_db_instance/default/name/0"
                            }
                        ]
                    },
                    "password": {
                        "var_file": "consts.tf",
                        "value": "Aa1234321Bb",
                        "definitions": [
                            {
                                "definition_name": "password",
                                "definition_expression": "${var.password}",
                                "definition_path": "resource/0/aws_db_instance/default/password/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-rds",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_4"
            },
            {
                "check_id": "CKV_AWS_17",
                "check_name": "Ensure all data stored in the RDS bucket is not public accessible",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "publicly_accessible"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_db_instance\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  name                   = var.dbname\n"
                    ],
                    [
                        3,
                        "  engine                 = \"mysql\"\n"
                    ],
                    [
                        4,
                        "  option_group_name      = aws_db_option_group.default.name\n"
                    ],
                    [
                        5,
                        "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                    ],
                    [
                        6,
                        "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                    ],
                    [
                        7,
                        "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                    ],
                    [
                        10,
                        "  engine_version          = \"8.0\" # Latest major version \n"
                    ],
                    [
                        11,
                        "  instance_class          = \"db.t3.micro\"\n"
                    ],
                    [
                        12,
                        "  allocated_storage       = \"20\"\n"
                    ],
                    [
                        13,
                        "  username                = \"admin\"\n"
                    ],
                    [
                        14,
                        "  password                = var.password\n"
                    ],
                    [
                        15,
                        "  apply_immediately       = true\n"
                    ],
                    [
                        16,
                        "  multi_az                = false\n"
                    ],
                    [
                        17,
                        "  backup_retention_period = 0\n"
                    ],
                    [
                        18,
                        "  storage_encrypted       = false\n"
                    ],
                    [
                        19,
                        "  skip_final_snapshot     = true\n"
                    ],
                    [
                        20,
                        "  monitoring_interval     = 0\n"
                    ],
                    [
                        21,
                        "  publicly_accessible     = true\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "  tags = {\n"
                    ],
                    [
                        24,
                        "    Name        = \"${local.resource_prefix.value}-rds\"\n"
                    ],
                    [
                        25,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  # Ignore password changes from tf plan diff\n"
                    ],
                    [
                        29,
                        "  lifecycle {\n"
                    ],
                    [
                        30,
                        "    ignore_changes = [\"password\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    1,
                    32
                ],
                "resource": "aws_db_instance.default",
                "evaluations": {
                    "dbname": {
                        "var_file": "consts.tf",
                        "value": "db1",
                        "definitions": [
                            {
                                "definition_name": "dbname",
                                "definition_expression": "${var.dbname}",
                                "definition_path": "resource/0/aws_db_instance/default/name/0"
                            }
                        ]
                    },
                    "password": {
                        "var_file": "consts.tf",
                        "value": "Aa1234321Bb",
                        "definitions": [
                            {
                                "definition_name": "password",
                                "definition_expression": "${var.password}",
                                "definition_path": "resource/0/aws_db_instance/default/password/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-rds",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_2"
            },
            {
                "check_id": "CKV_AWS_79",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        178,
                        "resource \"aws_instance\" \"db_app\" {\n"
                    ],
                    [
                        179,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        180,
                        "  ami                  = data.aws_ami.amazon-linux-2.id\n"
                    ],
                    [
                        181,
                        "  instance_type        = \"t2.nano\"\n"
                    ],
                    [
                        182,
                        "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n"
                    ],
                    [
                        183,
                        "\n"
                    ],
                    [
                        184,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        185,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        186,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        187,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        188,
                        "#! /bin/bash\n"
                    ],
                    [
                        189,
                        "### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\n"
                    ],
                    [
                        190,
                        "sudo yum -y update\n"
                    ],
                    [
                        191,
                        "sudo yum -y install httpd php php-mysqlnd\n"
                    ],
                    [
                        192,
                        "sudo systemctl enable httpd \n"
                    ],
                    [
                        193,
                        "sudo systemctl start httpd\n"
                    ],
                    [
                        194,
                        "\n"
                    ],
                    [
                        195,
                        "sudo mkdir /var/www/inc\n"
                    ],
                    [
                        196,
                        "cat << EnD > /tmp/dbinfo.inc\n"
                    ],
                    [
                        197,
                        "<?php\n"
                    ],
                    [
                        198,
                        "define('DB_SERVER', '${aws_db_instance.default.endpoint}');\n"
                    ],
                    [
                        199,
                        "define('DB_USERNAME', '${aws_db_instance.default.username}');\n"
                    ],
                    [
                        200,
                        "define('DB_PASSWORD', '${var.password}');\n"
                    ],
                    [
                        201,
                        "define('DB_DATABASE', '${aws_db_instance.default.name}');\n"
                    ],
                    [
                        202,
                        "?>\n"
                    ],
                    [
                        203,
                        "EnD\n"
                    ],
                    [
                        204,
                        "sudo mv /tmp/dbinfo.inc /var/www/inc \n"
                    ],
                    [
                        205,
                        "sudo chown root:root /var/www/inc/dbinfo.inc\n"
                    ],
                    [
                        206,
                        "\n"
                    ],
                    [
                        207,
                        "cat << EnD > /tmp/index.php\n"
                    ],
                    [
                        208,
                        "<?php include \"../inc/dbinfo.inc\"; ?>\n"
                    ],
                    [
                        209,
                        "<html>\n"
                    ],
                    [
                        210,
                        "<body>\n"
                    ],
                    [
                        211,
                        "<h1>Sample page</h1>\n"
                    ],
                    [
                        212,
                        "<?php\n"
                    ],
                    [
                        213,
                        "\n"
                    ],
                    [
                        214,
                        "  /* Connect to MySQL and select the database. */\n"
                    ],
                    [
                        215,
                        "  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n"
                    ],
                    [
                        218,
                        "\n"
                    ],
                    [
                        219,
                        "  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        220,
                        "\n"
                    ],
                    [
                        221,
                        "  /* Ensure that the EMPLOYEES table exists. */\n"
                    ],
                    [
                        222,
                        "  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        223,
                        "\n"
                    ],
                    [
                        224,
                        "  /* If input fields are populated, add a row to the EMPLOYEES table. */\n"
                    ],
                    [
                        225,
                        "  \\$employee_name = htmlentities(\\$_POST['NAME']);\n"
                    ],
                    [
                        226,
                        "  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n"
                    ],
                    [
                        227,
                        "\n"
                    ],
                    [
                        228,
                        "  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n"
                    ],
                    [
                        229,
                        "    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n"
                    ],
                    [
                        230,
                        "  }\n"
                    ],
                    [
                        231,
                        "?>\n"
                    ],
                    [
                        232,
                        "\n"
                    ],
                    [
                        233,
                        "<!-- Input form -->\n"
                    ],
                    [
                        234,
                        "<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n"
                    ],
                    [
                        235,
                        "  <table border=\"0\">\n"
                    ],
                    [
                        236,
                        "    <tr>\n"
                    ],
                    [
                        237,
                        "      <td>NAME</td>\n"
                    ],
                    [
                        238,
                        "      <td>ADDRESS</td>\n"
                    ],
                    [
                        239,
                        "    </tr>\n"
                    ],
                    [
                        240,
                        "    <tr>\n"
                    ],
                    [
                        241,
                        "      <td>\n"
                    ],
                    [
                        242,
                        "        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n"
                    ],
                    [
                        243,
                        "      </td>\n"
                    ],
                    [
                        244,
                        "      <td>\n"
                    ],
                    [
                        245,
                        "        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n"
                    ],
                    [
                        246,
                        "      </td>\n"
                    ],
                    [
                        247,
                        "      <td>\n"
                    ],
                    [
                        248,
                        "        <input type=\"submit\" value=\"Add Data\" />\n"
                    ],
                    [
                        249,
                        "      </td>\n"
                    ],
                    [
                        250,
                        "    </tr>\n"
                    ],
                    [
                        251,
                        "  </table>\n"
                    ],
                    [
                        252,
                        "</form>\n"
                    ],
                    [
                        253,
                        "\n"
                    ],
                    [
                        254,
                        "<!-- Display table data. -->\n"
                    ],
                    [
                        255,
                        "<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n"
                    ],
                    [
                        256,
                        "  <tr>\n"
                    ],
                    [
                        257,
                        "    <td>ID</td>\n"
                    ],
                    [
                        258,
                        "    <td>NAME</td>\n"
                    ],
                    [
                        259,
                        "    <td>ADDRESS</td>\n"
                    ],
                    [
                        260,
                        "  </tr>\n"
                    ],
                    [
                        261,
                        "\n"
                    ],
                    [
                        262,
                        "<?php\n"
                    ],
                    [
                        263,
                        "\n"
                    ],
                    [
                        264,
                        "\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n"
                    ],
                    [
                        265,
                        "\n"
                    ],
                    [
                        266,
                        "while(\\$query_data = mysqli_fetch_row(\\$result)) {\n"
                    ],
                    [
                        267,
                        "  echo \"<tr>\";\n"
                    ],
                    [
                        268,
                        "  echo \"<td>\",\\$query_data[0], \"</td>\",\n"
                    ],
                    [
                        269,
                        "       \"<td>\",\\$query_data[1], \"</td>\",\n"
                    ],
                    [
                        270,
                        "       \"<td>\",\\$query_data[2], \"</td>\";\n"
                    ],
                    [
                        271,
                        "  echo \"</tr>\";\n"
                    ],
                    [
                        272,
                        "}\n"
                    ],
                    [
                        273,
                        "?>\n"
                    ],
                    [
                        274,
                        "\n"
                    ],
                    [
                        275,
                        "</table>\n"
                    ],
                    [
                        276,
                        "\n"
                    ],
                    [
                        277,
                        "<!-- Clean up. -->\n"
                    ],
                    [
                        278,
                        "<?php\n"
                    ],
                    [
                        279,
                        "\n"
                    ],
                    [
                        280,
                        "  mysqli_free_result(\\$result);\n"
                    ],
                    [
                        281,
                        "  mysqli_close(\\$connection);\n"
                    ],
                    [
                        282,
                        "\n"
                    ],
                    [
                        283,
                        "?>\n"
                    ],
                    [
                        284,
                        "\n"
                    ],
                    [
                        285,
                        "</body>\n"
                    ],
                    [
                        286,
                        "</html>\n"
                    ],
                    [
                        287,
                        "\n"
                    ],
                    [
                        288,
                        "\n"
                    ],
                    [
                        289,
                        "<?php\n"
                    ],
                    [
                        290,
                        "\n"
                    ],
                    [
                        291,
                        "/* Add an employee to the table. */\n"
                    ],
                    [
                        292,
                        "function AddEmployee(\\$connection, \\$name, \\$address) {\n"
                    ],
                    [
                        293,
                        "   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n"
                    ],
                    [
                        294,
                        "   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n"
                    ],
                    [
                        295,
                        "\n"
                    ],
                    [
                        296,
                        "   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n"
                    ],
                    [
                        297,
                        "\n"
                    ],
                    [
                        298,
                        "   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n"
                    ],
                    [
                        299,
                        "}\n"
                    ],
                    [
                        300,
                        "\n"
                    ],
                    [
                        301,
                        "/* Check whether the table exists and, if not, create it. */\n"
                    ],
                    [
                        302,
                        "function VerifyEmployeesTable(\\$connection, \\$dbName) {\n"
                    ],
                    [
                        303,
                        "  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n"
                    ],
                    [
                        304,
                        "  {\n"
                    ],
                    [
                        305,
                        "     \\$query = \"CREATE TABLE EMPLOYEES (\n"
                    ],
                    [
                        306,
                        "         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n"
                    ],
                    [
                        307,
                        "         NAME VARCHAR(45),\n"
                    ],
                    [
                        308,
                        "         ADDRESS VARCHAR(90)\n"
                    ],
                    [
                        309,
                        "       )\";\n"
                    ],
                    [
                        310,
                        "\n"
                    ],
                    [
                        311,
                        "     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n"
                    ],
                    [
                        312,
                        "  }\n"
                    ],
                    [
                        313,
                        "}\n"
                    ],
                    [
                        314,
                        "\n"
                    ],
                    [
                        315,
                        "/* Check for the existence of a table. */\n"
                    ],
                    [
                        316,
                        "function TableExists(\\$tableName, \\$connection, \\$dbName) {\n"
                    ],
                    [
                        317,
                        "  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n"
                    ],
                    [
                        318,
                        "  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n"
                    ],
                    [
                        319,
                        "\n"
                    ],
                    [
                        320,
                        "  \\$checktable = mysqli_query(\\$connection,\n"
                    ],
                    [
                        321,
                        "      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n"
                    ],
                    [
                        322,
                        "\n"
                    ],
                    [
                        323,
                        "  if(mysqli_num_rows(\\$checktable) > 0) return true;\n"
                    ],
                    [
                        324,
                        "\n"
                    ],
                    [
                        325,
                        "  return false;\n"
                    ],
                    [
                        326,
                        "}\n"
                    ],
                    [
                        327,
                        "?>               \n"
                    ],
                    [
                        328,
                        "EnD\n"
                    ],
                    [
                        329,
                        "\n"
                    ],
                    [
                        330,
                        "sudo mv /tmp/index.php /var/www/html\n"
                    ],
                    [
                        331,
                        "sudo chown root:root /var/www/html/index.php\n"
                    ],
                    [
                        332,
                        "\n"
                    ],
                    [
                        333,
                        "\n"
                    ],
                    [
                        334,
                        "\n"
                    ],
                    [
                        335,
                        "EOF\n"
                    ],
                    [
                        336,
                        "  tags = {\n"
                    ],
                    [
                        337,
                        "    Name = \"${local.resource_prefix.value}-dbapp\"\n"
                    ],
                    [
                        338,
                        "  }\n"
                    ],
                    [
                        339,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    178,
                    339
                ],
                "resource": "aws_instance.db_app",
                "evaluations": {
                    "password": {
                        "var_file": "consts.tf",
                        "value": "Aa1234321Bb",
                        "definitions": [
                            {
                                "definition_name": "password",
                                "definition_expression": "#! /bin/bash\n### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\nsudo yum -y update\nsudo yum -y install httpd php php-mysqlnd\nsudo systemctl enable httpd \nsudo systemctl start httpd\n\nsudo mkdir /var/www/inc\ncat << EnD > /tmp/dbinfo.inc\n<?php\ndefine('DB_SERVER', '${aws_db_instance.default.endpoint}');\ndefine('DB_USERNAME', '${aws_db_instance.default.username}');\ndefine('DB_PASSWORD', '${var.password}');\ndefine('DB_DATABASE', '${aws_db_instance.default.name}');\n?>\nEnD\nsudo mv /tmp/dbinfo.inc /var/www/inc \nsudo chown root:root /var/www/inc/dbinfo.inc\n\ncat << EnD > /tmp/index.php\n<?php include \"../inc/dbinfo.inc\"; ?>\n<html>\n<body>\n<h1>Sample page</h1>\n<?php\n\n  /* Connect to MySQL and select the database. */\n  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n\n  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n\n  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n\n  /* Ensure that the EMPLOYEES table exists. */\n  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n\n  /* If input fields are populated, add a row to the EMPLOYEES table. */\n  \\$employee_name = htmlentities(\\$_POST['NAME']);\n  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n\n  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n  }\n?>\n\n<!-- Input form -->\n<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n  <table border=\"0\">\n    <tr>\n      <td>NAME</td>\n      <td>ADDRESS</td>\n    </tr>\n    <tr>\n      <td>\n        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n      </td>\n      <td>\n        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n      </td>\n      <td>\n        <input type=\"submit\" value=\"Add Data\" />\n      </td>\n    </tr>\n  </table>\n</form>\n\n<!-- Display table data. -->\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n  <tr>\n    <td>ID</td>\n    <td>NAME</td>\n    <td>ADDRESS</td>\n  </tr>\n\n<?php\n\n\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n\nwhile(\\$query_data = mysqli_fetch_row(\\$result)) {\n  echo \"<tr>\";\n  echo \"<td>\",\\$query_data[0], \"</td>\",\n       \"<td>\",\\$query_data[1], \"</td>\",\n       \"<td>\",\\$query_data[2], \"</td>\";\n  echo \"</tr>\";\n}\n?>\n\n</table>\n\n<!-- Clean up. -->\n<?php\n\n  mysqli_free_result(\\$result);\n  mysqli_close(\\$connection);\n\n?>\n\n</body>\n</html>\n\n\n<?php\n\n/* Add an employee to the table. */\nfunction AddEmployee(\\$connection, \\$name, \\$address) {\n   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n\n   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n\n   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n}\n\n/* Check whether the table exists and, if not, create it. */\nfunction VerifyEmployeesTable(\\$connection, \\$dbName) {\n  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n  {\n     \\$query = \"CREATE TABLE EMPLOYEES (\n         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n         NAME VARCHAR(45),\n         ADDRESS VARCHAR(90)\n       )\";\n\n     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n  }\n}\n\n/* Check for the existence of a table. */\nfunction TableExists(\\$tableName, \\$connection, \\$dbName) {\n  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n\n  \\$checktable = mysqli_query(\\$connection,\n      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n\n  if(mysqli_num_rows(\\$checktable) > 0) return true;\n\n  return false;\n}\n?>               \nEnD\n\nsudo mv /tmp/index.php /var/www/html\nsudo chown root:root /var/www/html/index.php",
                                "definition_path": "resource/10/aws_instance/db_app/user_data/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-dbapp"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        178,
                        "resource \"aws_instance\" \"db_app\" {\n"
                    ],
                    [
                        179,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        180,
                        "  ami                  = data.aws_ami.amazon-linux-2.id\n"
                    ],
                    [
                        181,
                        "  instance_type        = \"t2.nano\"\n"
                    ],
                    [
                        182,
                        "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n"
                    ],
                    [
                        183,
                        "\n"
                    ],
                    [
                        184,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        185,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        186,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        187,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        188,
                        "#! /bin/bash\n"
                    ],
                    [
                        189,
                        "### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\n"
                    ],
                    [
                        190,
                        "sudo yum -y update\n"
                    ],
                    [
                        191,
                        "sudo yum -y install httpd php php-mysqlnd\n"
                    ],
                    [
                        192,
                        "sudo systemctl enable httpd \n"
                    ],
                    [
                        193,
                        "sudo systemctl start httpd\n"
                    ],
                    [
                        194,
                        "\n"
                    ],
                    [
                        195,
                        "sudo mkdir /var/www/inc\n"
                    ],
                    [
                        196,
                        "cat << EnD > /tmp/dbinfo.inc\n"
                    ],
                    [
                        197,
                        "<?php\n"
                    ],
                    [
                        198,
                        "define('DB_SERVER', '${aws_db_instance.default.endpoint}');\n"
                    ],
                    [
                        199,
                        "define('DB_USERNAME', '${aws_db_instance.default.username}');\n"
                    ],
                    [
                        200,
                        "define('DB_PASSWORD', '${var.password}');\n"
                    ],
                    [
                        201,
                        "define('DB_DATABASE', '${aws_db_instance.default.name}');\n"
                    ],
                    [
                        202,
                        "?>\n"
                    ],
                    [
                        203,
                        "EnD\n"
                    ],
                    [
                        204,
                        "sudo mv /tmp/dbinfo.inc /var/www/inc \n"
                    ],
                    [
                        205,
                        "sudo chown root:root /var/www/inc/dbinfo.inc\n"
                    ],
                    [
                        206,
                        "\n"
                    ],
                    [
                        207,
                        "cat << EnD > /tmp/index.php\n"
                    ],
                    [
                        208,
                        "<?php include \"../inc/dbinfo.inc\"; ?>\n"
                    ],
                    [
                        209,
                        "<html>\n"
                    ],
                    [
                        210,
                        "<body>\n"
                    ],
                    [
                        211,
                        "<h1>Sample page</h1>\n"
                    ],
                    [
                        212,
                        "<?php\n"
                    ],
                    [
                        213,
                        "\n"
                    ],
                    [
                        214,
                        "  /* Connect to MySQL and select the database. */\n"
                    ],
                    [
                        215,
                        "  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n"
                    ],
                    [
                        218,
                        "\n"
                    ],
                    [
                        219,
                        "  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        220,
                        "\n"
                    ],
                    [
                        221,
                        "  /* Ensure that the EMPLOYEES table exists. */\n"
                    ],
                    [
                        222,
                        "  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        223,
                        "\n"
                    ],
                    [
                        224,
                        "  /* If input fields are populated, add a row to the EMPLOYEES table. */\n"
                    ],
                    [
                        225,
                        "  \\$employee_name = htmlentities(\\$_POST['NAME']);\n"
                    ],
                    [
                        226,
                        "  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n"
                    ],
                    [
                        227,
                        "\n"
                    ],
                    [
                        228,
                        "  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n"
                    ],
                    [
                        229,
                        "    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n"
                    ],
                    [
                        230,
                        "  }\n"
                    ],
                    [
                        231,
                        "?>\n"
                    ],
                    [
                        232,
                        "\n"
                    ],
                    [
                        233,
                        "<!-- Input form -->\n"
                    ],
                    [
                        234,
                        "<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n"
                    ],
                    [
                        235,
                        "  <table border=\"0\">\n"
                    ],
                    [
                        236,
                        "    <tr>\n"
                    ],
                    [
                        237,
                        "      <td>NAME</td>\n"
                    ],
                    [
                        238,
                        "      <td>ADDRESS</td>\n"
                    ],
                    [
                        239,
                        "    </tr>\n"
                    ],
                    [
                        240,
                        "    <tr>\n"
                    ],
                    [
                        241,
                        "      <td>\n"
                    ],
                    [
                        242,
                        "        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n"
                    ],
                    [
                        243,
                        "      </td>\n"
                    ],
                    [
                        244,
                        "      <td>\n"
                    ],
                    [
                        245,
                        "        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n"
                    ],
                    [
                        246,
                        "      </td>\n"
                    ],
                    [
                        247,
                        "      <td>\n"
                    ],
                    [
                        248,
                        "        <input type=\"submit\" value=\"Add Data\" />\n"
                    ],
                    [
                        249,
                        "      </td>\n"
                    ],
                    [
                        250,
                        "    </tr>\n"
                    ],
                    [
                        251,
                        "  </table>\n"
                    ],
                    [
                        252,
                        "</form>\n"
                    ],
                    [
                        253,
                        "\n"
                    ],
                    [
                        254,
                        "<!-- Display table data. -->\n"
                    ],
                    [
                        255,
                        "<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n"
                    ],
                    [
                        256,
                        "  <tr>\n"
                    ],
                    [
                        257,
                        "    <td>ID</td>\n"
                    ],
                    [
                        258,
                        "    <td>NAME</td>\n"
                    ],
                    [
                        259,
                        "    <td>ADDRESS</td>\n"
                    ],
                    [
                        260,
                        "  </tr>\n"
                    ],
                    [
                        261,
                        "\n"
                    ],
                    [
                        262,
                        "<?php\n"
                    ],
                    [
                        263,
                        "\n"
                    ],
                    [
                        264,
                        "\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n"
                    ],
                    [
                        265,
                        "\n"
                    ],
                    [
                        266,
                        "while(\\$query_data = mysqli_fetch_row(\\$result)) {\n"
                    ],
                    [
                        267,
                        "  echo \"<tr>\";\n"
                    ],
                    [
                        268,
                        "  echo \"<td>\",\\$query_data[0], \"</td>\",\n"
                    ],
                    [
                        269,
                        "       \"<td>\",\\$query_data[1], \"</td>\",\n"
                    ],
                    [
                        270,
                        "       \"<td>\",\\$query_data[2], \"</td>\";\n"
                    ],
                    [
                        271,
                        "  echo \"</tr>\";\n"
                    ],
                    [
                        272,
                        "}\n"
                    ],
                    [
                        273,
                        "?>\n"
                    ],
                    [
                        274,
                        "\n"
                    ],
                    [
                        275,
                        "</table>\n"
                    ],
                    [
                        276,
                        "\n"
                    ],
                    [
                        277,
                        "<!-- Clean up. -->\n"
                    ],
                    [
                        278,
                        "<?php\n"
                    ],
                    [
                        279,
                        "\n"
                    ],
                    [
                        280,
                        "  mysqli_free_result(\\$result);\n"
                    ],
                    [
                        281,
                        "  mysqli_close(\\$connection);\n"
                    ],
                    [
                        282,
                        "\n"
                    ],
                    [
                        283,
                        "?>\n"
                    ],
                    [
                        284,
                        "\n"
                    ],
                    [
                        285,
                        "</body>\n"
                    ],
                    [
                        286,
                        "</html>\n"
                    ],
                    [
                        287,
                        "\n"
                    ],
                    [
                        288,
                        "\n"
                    ],
                    [
                        289,
                        "<?php\n"
                    ],
                    [
                        290,
                        "\n"
                    ],
                    [
                        291,
                        "/* Add an employee to the table. */\n"
                    ],
                    [
                        292,
                        "function AddEmployee(\\$connection, \\$name, \\$address) {\n"
                    ],
                    [
                        293,
                        "   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n"
                    ],
                    [
                        294,
                        "   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n"
                    ],
                    [
                        295,
                        "\n"
                    ],
                    [
                        296,
                        "   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n"
                    ],
                    [
                        297,
                        "\n"
                    ],
                    [
                        298,
                        "   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n"
                    ],
                    [
                        299,
                        "}\n"
                    ],
                    [
                        300,
                        "\n"
                    ],
                    [
                        301,
                        "/* Check whether the table exists and, if not, create it. */\n"
                    ],
                    [
                        302,
                        "function VerifyEmployeesTable(\\$connection, \\$dbName) {\n"
                    ],
                    [
                        303,
                        "  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n"
                    ],
                    [
                        304,
                        "  {\n"
                    ],
                    [
                        305,
                        "     \\$query = \"CREATE TABLE EMPLOYEES (\n"
                    ],
                    [
                        306,
                        "         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n"
                    ],
                    [
                        307,
                        "         NAME VARCHAR(45),\n"
                    ],
                    [
                        308,
                        "         ADDRESS VARCHAR(90)\n"
                    ],
                    [
                        309,
                        "       )\";\n"
                    ],
                    [
                        310,
                        "\n"
                    ],
                    [
                        311,
                        "     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n"
                    ],
                    [
                        312,
                        "  }\n"
                    ],
                    [
                        313,
                        "}\n"
                    ],
                    [
                        314,
                        "\n"
                    ],
                    [
                        315,
                        "/* Check for the existence of a table. */\n"
                    ],
                    [
                        316,
                        "function TableExists(\\$tableName, \\$connection, \\$dbName) {\n"
                    ],
                    [
                        317,
                        "  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n"
                    ],
                    [
                        318,
                        "  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n"
                    ],
                    [
                        319,
                        "\n"
                    ],
                    [
                        320,
                        "  \\$checktable = mysqli_query(\\$connection,\n"
                    ],
                    [
                        321,
                        "      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n"
                    ],
                    [
                        322,
                        "\n"
                    ],
                    [
                        323,
                        "  if(mysqli_num_rows(\\$checktable) > 0) return true;\n"
                    ],
                    [
                        324,
                        "\n"
                    ],
                    [
                        325,
                        "  return false;\n"
                    ],
                    [
                        326,
                        "}\n"
                    ],
                    [
                        327,
                        "?>               \n"
                    ],
                    [
                        328,
                        "EnD\n"
                    ],
                    [
                        329,
                        "\n"
                    ],
                    [
                        330,
                        "sudo mv /tmp/index.php /var/www/html\n"
                    ],
                    [
                        331,
                        "sudo chown root:root /var/www/html/index.php\n"
                    ],
                    [
                        332,
                        "\n"
                    ],
                    [
                        333,
                        "\n"
                    ],
                    [
                        334,
                        "\n"
                    ],
                    [
                        335,
                        "EOF\n"
                    ],
                    [
                        336,
                        "  tags = {\n"
                    ],
                    [
                        337,
                        "    Name = \"${local.resource_prefix.value}-dbapp\"\n"
                    ],
                    [
                        338,
                        "  }\n"
                    ],
                    [
                        339,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/db-app.tf",
                "repo_file_path": "/terraform/aws/db-app.tf",
                "file_line_range": [
                    178,
                    339
                ],
                "resource": "aws_instance.db_app",
                "evaluations": {
                    "password": {
                        "var_file": "consts.tf",
                        "value": "Aa1234321Bb",
                        "definitions": [
                            {
                                "definition_name": "password",
                                "definition_expression": "#! /bin/bash\n### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\nsudo yum -y update\nsudo yum -y install httpd php php-mysqlnd\nsudo systemctl enable httpd \nsudo systemctl start httpd\n\nsudo mkdir /var/www/inc\ncat << EnD > /tmp/dbinfo.inc\n<?php\ndefine('DB_SERVER', '${aws_db_instance.default.endpoint}');\ndefine('DB_USERNAME', '${aws_db_instance.default.username}');\ndefine('DB_PASSWORD', '${var.password}');\ndefine('DB_DATABASE', '${aws_db_instance.default.name}');\n?>\nEnD\nsudo mv /tmp/dbinfo.inc /var/www/inc \nsudo chown root:root /var/www/inc/dbinfo.inc\n\ncat << EnD > /tmp/index.php\n<?php include \"../inc/dbinfo.inc\"; ?>\n<html>\n<body>\n<h1>Sample page</h1>\n<?php\n\n  /* Connect to MySQL and select the database. */\n  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n\n  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n\n  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n\n  /* Ensure that the EMPLOYEES table exists. */\n  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n\n  /* If input fields are populated, add a row to the EMPLOYEES table. */\n  \\$employee_name = htmlentities(\\$_POST['NAME']);\n  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n\n  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n  }\n?>\n\n<!-- Input form -->\n<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n  <table border=\"0\">\n    <tr>\n      <td>NAME</td>\n      <td>ADDRESS</td>\n    </tr>\n    <tr>\n      <td>\n        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n      </td>\n      <td>\n        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n      </td>\n      <td>\n        <input type=\"submit\" value=\"Add Data\" />\n      </td>\n    </tr>\n  </table>\n</form>\n\n<!-- Display table data. -->\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n  <tr>\n    <td>ID</td>\n    <td>NAME</td>\n    <td>ADDRESS</td>\n  </tr>\n\n<?php\n\n\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n\nwhile(\\$query_data = mysqli_fetch_row(\\$result)) {\n  echo \"<tr>\";\n  echo \"<td>\",\\$query_data[0], \"</td>\",\n       \"<td>\",\\$query_data[1], \"</td>\",\n       \"<td>\",\\$query_data[2], \"</td>\";\n  echo \"</tr>\";\n}\n?>\n\n</table>\n\n<!-- Clean up. -->\n<?php\n\n  mysqli_free_result(\\$result);\n  mysqli_close(\\$connection);\n\n?>\n\n</body>\n</html>\n\n\n<?php\n\n/* Add an employee to the table. */\nfunction AddEmployee(\\$connection, \\$name, \\$address) {\n   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n\n   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n\n   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n}\n\n/* Check whether the table exists and, if not, create it. */\nfunction VerifyEmployeesTable(\\$connection, \\$dbName) {\n  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n  {\n     \\$query = \"CREATE TABLE EMPLOYEES (\n         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n         NAME VARCHAR(45),\n         ADDRESS VARCHAR(90)\n       )\";\n\n     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n  }\n}\n\n/* Check for the existence of a table. */\nfunction TableExists(\\$tableName, \\$connection, \\$dbName) {\n  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n\n  \\$checktable = mysqli_query(\\$connection,\n      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n\n  if(mysqli_num_rows(\\$checktable) > 0) return true;\n\n  return false;\n}\n?>               \nEnD\n\nsudo mv /tmp/index.php /var/www/html\nsudo chown root:root /var/www/html/index.php",
                                "definition_path": "resource/10/aws_instance/db_app/user_data/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-dbapp"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_40",
                "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "user",
                        "users"
                    ]
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                    ],
                    [
                        17,
                        "  name = \"excess_policy\"\n"
                    ],
                    [
                        18,
                        "  user = \"${aws_iam_user.user.name}\"\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  policy = <<EOF\n"
                    ],
                    [
                        21,
                        "{\n"
                    ],
                    [
                        22,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        23,
                        "  \"Statement\": [\n"
                    ],
                    [
                        24,
                        "    {\n"
                    ],
                    [
                        25,
                        "      \"Action\": [\n"
                    ],
                    [
                        26,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        27,
                        "        \"s3:*\",\n"
                    ],
                    [
                        28,
                        "        \"lambda:*\",\n"
                    ],
                    [
                        29,
                        "        \"cloudwatch:*\"\n"
                    ],
                    [
                        30,
                        "      ],\n"
                    ],
                    [
                        31,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        32,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        33,
                        "    }\n"
                    ],
                    [
                        34,
                        "  ]\n"
                    ],
                    [
                        35,
                        "}\n"
                    ],
                    [
                        36,
                        "EOF\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/iam.tf",
                "repo_file_path": "/terraform/aws/iam.tf",
                "file_line_range": [
                    16,
                    37
                ],
                "resource": "aws_iam_user_policy.userpolicy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
            },
            {
                "check_id": "CKV_AWS_101",
                "check_name": "Ensure Neptune logging is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_neptune_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier                  = var.neptune-dbname\n"
                    ],
                    [
                        3,
                        "  engine                              = \"neptune\"\n"
                    ],
                    [
                        4,
                        "  backup_retention_period             = 5\n"
                    ],
                    [
                        5,
                        "  preferred_backup_window             = \"07:00-09:00\"\n"
                    ],
                    [
                        6,
                        "  skip_final_snapshot                 = true\n"
                    ],
                    [
                        7,
                        "  iam_database_authentication_enabled = false\n"
                    ],
                    [
                        8,
                        "  apply_immediately                   = true\n"
                    ],
                    [
                        9,
                        "  storage_encrypted                   = false\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/neptune.tf",
                "repo_file_path": "/terraform/aws/neptune.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_neptune_cluster.default",
                "evaluations": {
                    "neptune-dbname": {
                        "var_file": "consts.tf",
                        "value": "neptunedb1",
                        "definitions": [
                            {
                                "definition_name": "neptune-dbname",
                                "definition_expression": "${var.neptune-dbname}",
                                "definition_path": "resource/0/aws_neptune_cluster/default/cluster_identifier/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.NeptuneClusterLogging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_24"
            },
            {
                "check_id": "CKV_AWS_44",
                "check_name": "Ensure Neptune storage is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "storage_encrypted"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_neptune_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier                  = var.neptune-dbname\n"
                    ],
                    [
                        3,
                        "  engine                              = \"neptune\"\n"
                    ],
                    [
                        4,
                        "  backup_retention_period             = 5\n"
                    ],
                    [
                        5,
                        "  preferred_backup_window             = \"07:00-09:00\"\n"
                    ],
                    [
                        6,
                        "  skip_final_snapshot                 = true\n"
                    ],
                    [
                        7,
                        "  iam_database_authentication_enabled = false\n"
                    ],
                    [
                        8,
                        "  apply_immediately                   = true\n"
                    ],
                    [
                        9,
                        "  storage_encrypted                   = false\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/neptune.tf",
                "repo_file_path": "/terraform/aws/neptune.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_neptune_cluster.default",
                "evaluations": {
                    "neptune-dbname": {
                        "var_file": "consts.tf",
                        "value": "neptunedb1",
                        "definitions": [
                            {
                                "definition_name": "neptune-dbname",
                                "definition_expression": "${var.neptune-dbname}",
                                "definition_path": "resource/0/aws_neptune_cluster/default/cluster_identifier/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.NeptuneClusterStorageEncrypted",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_18"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/mfa_delete"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-data",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/mfa_delete"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-financials",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/mfa_delete"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-operations",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/mfa_delete"
                    ]
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/mfa_delete"
                    ]
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/s3.tf",
                "repo_file_path": "/terraform/aws/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-logs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_58",
                "check_name": "Ensure EKS Cluster has Secrets Encryption Enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encryption_config/[0]/resources"
                    ]
                },
                "code_block": [
                    [
                        64,
                        "resource aws_eks_cluster \"eks_cluster\" {\n"
                    ],
                    [
                        65,
                        "  name     = local.eks_name.value\n"
                    ],
                    [
                        66,
                        "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  vpc_config {\n"
                    ],
                    [
                        69,
                        "    endpoint_private_access = true\n"
                    ],
                    [
                        70,
                        "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]\n"
                    ],
                    [
                        71,
                        "  }\n"
                    ],
                    [
                        72,
                        "\n"
                    ],
                    [
                        73,
                        "  depends_on = [\n"
                    ],
                    [
                        74,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSClusterPolicy\",\n"
                    ],
                    [
                        75,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSServicePolicy\",\n"
                    ],
                    [
                        76,
                        "  ]\n"
                    ],
                    [
                        77,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    64,
                    77
                ],
                "resource": "aws_eks_cluster.eks_cluster",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.EKSSecretsEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_3"
            },
            {
                "check_id": "CKV_AWS_39",
                "check_name": "Ensure Amazon EKS public endpoint disabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "vpc_config/[0]/endpoint_public_access"
                    ]
                },
                "code_block": [
                    [
                        64,
                        "resource aws_eks_cluster \"eks_cluster\" {\n"
                    ],
                    [
                        65,
                        "  name     = local.eks_name.value\n"
                    ],
                    [
                        66,
                        "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  vpc_config {\n"
                    ],
                    [
                        69,
                        "    endpoint_private_access = true\n"
                    ],
                    [
                        70,
                        "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]\n"
                    ],
                    [
                        71,
                        "  }\n"
                    ],
                    [
                        72,
                        "\n"
                    ],
                    [
                        73,
                        "  depends_on = [\n"
                    ],
                    [
                        74,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSClusterPolicy\",\n"
                    ],
                    [
                        75,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSServicePolicy\",\n"
                    ],
                    [
                        76,
                        "  ]\n"
                    ],
                    [
                        77,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    64,
                    77
                ],
                "resource": "aws_eks_cluster.eks_cluster",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.EKSPublicAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_2"
            },
            {
                "check_id": "CKV_AWS_38",
                "check_name": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "vpc_config"
                    ]
                },
                "code_block": [
                    [
                        64,
                        "resource aws_eks_cluster \"eks_cluster\" {\n"
                    ],
                    [
                        65,
                        "  name     = local.eks_name.value\n"
                    ],
                    [
                        66,
                        "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  vpc_config {\n"
                    ],
                    [
                        69,
                        "    endpoint_private_access = true\n"
                    ],
                    [
                        70,
                        "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]\n"
                    ],
                    [
                        71,
                        "  }\n"
                    ],
                    [
                        72,
                        "\n"
                    ],
                    [
                        73,
                        "  depends_on = [\n"
                    ],
                    [
                        74,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSClusterPolicy\",\n"
                    ],
                    [
                        75,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSServicePolicy\",\n"
                    ],
                    [
                        76,
                        "  ]\n"
                    ],
                    [
                        77,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    64,
                    77
                ],
                "resource": "aws_eks_cluster.eks_cluster",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.EKSPublicAccessCIDR",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_1"
            },
            {
                "check_id": "CKV_AWS_37",
                "check_name": "Ensure Amazon EKS control plane logging enabled for all log types",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enabled_cluster_log_types"
                    ]
                },
                "code_block": [
                    [
                        64,
                        "resource aws_eks_cluster \"eks_cluster\" {\n"
                    ],
                    [
                        65,
                        "  name     = local.eks_name.value\n"
                    ],
                    [
                        66,
                        "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  vpc_config {\n"
                    ],
                    [
                        69,
                        "    endpoint_private_access = true\n"
                    ],
                    [
                        70,
                        "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]\n"
                    ],
                    [
                        71,
                        "  }\n"
                    ],
                    [
                        72,
                        "\n"
                    ],
                    [
                        73,
                        "  depends_on = [\n"
                    ],
                    [
                        74,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSClusterPolicy\",\n"
                    ],
                    [
                        75,
                        "    \"aws_iam_role_policy_attachment.policy_attachment-AmazonEKSServicePolicy\",\n"
                    ],
                    [
                        76,
                        "  ]\n"
                    ],
                    [
                        77,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/eks.tf",
                "repo_file_path": "/terraform/aws/eks.tf",
                "file_line_range": [
                    64,
                    77
                ],
                "resource": "aws_eks_cluster.eks_cluster",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.EKSControlPlaneLogging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_4"
            },
            {
                "check_id": "CKV_AWS_92",
                "check_name": "Ensure the ELB has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs"
                    ]
                },
                "code_block": [
                    [
                        2,
                        "resource \"aws_elb\" \"weblb\" {\n"
                    ],
                    [
                        3,
                        "  name = \"weblb-terraform-elb\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  listener {\n"
                    ],
                    [
                        6,
                        "    instance_port     = 8000\n"
                    ],
                    [
                        7,
                        "    instance_protocol = \"http\"\n"
                    ],
                    [
                        8,
                        "    lb_port           = 80\n"
                    ],
                    [
                        9,
                        "    lb_protocol       = \"http\"\n"
                    ],
                    [
                        10,
                        "  }\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  health_check {\n"
                    ],
                    [
                        13,
                        "    healthy_threshold   = 2\n"
                    ],
                    [
                        14,
                        "    unhealthy_threshold = 2\n"
                    ],
                    [
                        15,
                        "    timeout             = 3\n"
                    ],
                    [
                        16,
                        "    target              = \"HTTP:8000/\"\n"
                    ],
                    [
                        17,
                        "    interval            = 30\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  subnets                     = [aws_subnet.web_subnet.id]\n"
                    ],
                    [
                        21,
                        "  security_groups             = [aws_security_group.web-node.id]\n"
                    ],
                    [
                        22,
                        "  instances                   = [aws_instance.web_host.id]\n"
                    ],
                    [
                        23,
                        "  cross_zone_load_balancing   = true\n"
                    ],
                    [
                        24,
                        "  idle_timeout                = 400\n"
                    ],
                    [
                        25,
                        "  connection_draining         = true\n"
                    ],
                    [
                        26,
                        "  connection_draining_timeout = 400\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  tags = {\n"
                    ],
                    [
                        29,
                        "    Name = \"foobar-terraform-elb\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}"
                    ]
                ],
                "file_path": "/terraform/aws/elb.tf",
                "repo_file_path": "/terraform/aws/elb.tf",
                "file_line_range": [
                    2,
                    31
                ],
                "resource": "aws_elb.weblb",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBAccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "foobar-terraform-elb"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_23"
            },
            {
                "check_id": "CKV_AWS_7",
                "check_name": "Ensure rotation for customer created CMKs is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_key_rotation"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_kms_key\" \"logs_key\" {\n"
                    ],
                    [
                        2,
                        "  # key does not have rotation enabled\n"
                    ],
                    [
                        3,
                        "  description = \"${local.resource_prefix.value}-logs bucket key\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  deletion_window_in_days = 7\n"
                    ],
                    [
                        6,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/kms.tf",
                "repo_file_path": "/terraform/aws/kms.tf",
                "file_line_range": [
                    1,
                    6
                ],
                "resource": "aws_kms_key.logs_key",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_8"
            },
            {
                "check_id": "CKV_AWS_83",
                "check_name": "Ensure Elasticsearch Domain enforces HTTPS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "domain_endpoint_options/[0]/enforce_https"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {\n"
                    ],
                    [
                        2,
                        "  domain_name           = \"tg-${var.environment}-es\"\n"
                    ],
                    [
                        3,
                        "  elasticsearch_version = \"2.3\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  cluster_config {\n"
                    ],
                    [
                        6,
                        "    instance_type            = \"t2.small.elasticsearch\"\n"
                    ],
                    [
                        7,
                        "    instance_count           = 1\n"
                    ],
                    [
                        8,
                        "    dedicated_master_enabled = false\n"
                    ],
                    [
                        9,
                        "    dedicated_master_type    = \"m4.large.elasticsearch\"\n"
                    ],
                    [
                        10,
                        "    dedicated_master_count   = 1\n"
                    ],
                    [
                        11,
                        "  }\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "  ebs_options {\n"
                    ],
                    [
                        14,
                        "    ebs_enabled = true\n"
                    ],
                    [
                        15,
                        "    volume_size = 30\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    1,
                    17
                ],
                "resource": "aws_elasticsearch_domain.monitoring-framework",
                "evaluations": {
                    "environment": {
                        "var_file": "consts.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tg-${var.environment}-es",
                                "definition_path": "resource/0/aws_elasticsearch_domain/monitoring-framework/domain_name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainEnforceHTTPS",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_6"
            },
            {
                "check_id": "CKV_AWS_5",
                "check_name": "Ensure all data stored in the Elasticsearch is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encrypt_at_rest/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {\n"
                    ],
                    [
                        2,
                        "  domain_name           = \"tg-${var.environment}-es\"\n"
                    ],
                    [
                        3,
                        "  elasticsearch_version = \"2.3\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  cluster_config {\n"
                    ],
                    [
                        6,
                        "    instance_type            = \"t2.small.elasticsearch\"\n"
                    ],
                    [
                        7,
                        "    instance_count           = 1\n"
                    ],
                    [
                        8,
                        "    dedicated_master_enabled = false\n"
                    ],
                    [
                        9,
                        "    dedicated_master_type    = \"m4.large.elasticsearch\"\n"
                    ],
                    [
                        10,
                        "    dedicated_master_count   = 1\n"
                    ],
                    [
                        11,
                        "  }\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "  ebs_options {\n"
                    ],
                    [
                        14,
                        "    ebs_enabled = true\n"
                    ],
                    [
                        15,
                        "    volume_size = 30\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    1,
                    17
                ],
                "resource": "aws_elasticsearch_domain.monitoring-framework",
                "evaluations": {
                    "environment": {
                        "var_file": "consts.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tg-${var.environment}-es",
                                "definition_path": "resource/0/aws_elasticsearch_domain/monitoring-framework/domain_name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest"
            },
            {
                "check_id": "CKV_AWS_84",
                "check_name": "Ensure Elasticsearch Domain Logging is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "log_publishing_options/[0]/cloudwatch_log_group_arn"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {\n"
                    ],
                    [
                        2,
                        "  domain_name           = \"tg-${var.environment}-es\"\n"
                    ],
                    [
                        3,
                        "  elasticsearch_version = \"2.3\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  cluster_config {\n"
                    ],
                    [
                        6,
                        "    instance_type            = \"t2.small.elasticsearch\"\n"
                    ],
                    [
                        7,
                        "    instance_count           = 1\n"
                    ],
                    [
                        8,
                        "    dedicated_master_enabled = false\n"
                    ],
                    [
                        9,
                        "    dedicated_master_type    = \"m4.large.elasticsearch\"\n"
                    ],
                    [
                        10,
                        "    dedicated_master_count   = 1\n"
                    ],
                    [
                        11,
                        "  }\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "  ebs_options {\n"
                    ],
                    [
                        14,
                        "    ebs_enabled = true\n"
                    ],
                    [
                        15,
                        "    volume_size = 30\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    1,
                    17
                ],
                "resource": "aws_elasticsearch_domain.monitoring-framework",
                "evaluations": {
                    "environment": {
                        "var_file": "consts.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "tg-${var.environment}-es",
                                "definition_path": "resource/0/aws_elasticsearch_domain/monitoring-framework/domain_name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainLogging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_7"
            },
            {
                "check_id": "CKV_AWS_109",
                "check_name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMPermissionsManagement",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_111",
                "check_name": "Ensure IAM policies does not allow write access without constraints",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "data aws_iam_policy_document \"policy\" {\n"
                    ],
                    [
                        20,
                        "  statement {\n"
                    ],
                    [
                        21,
                        "    actions = [\"es:*\"]\n"
                    ],
                    [
                        22,
                        "    principals {\n"
                    ],
                    [
                        23,
                        "      type        = \"AWS\"\n"
                    ],
                    [
                        24,
                        "      identifiers = [\"*\"]\n"
                    ],
                    [
                        25,
                        "    }\n"
                    ],
                    [
                        26,
                        "    resources = [\"*\"]\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/es.tf",
                "repo_file_path": "/terraform/aws/es.tf",
                "file_line_range": [
                    19,
                    28
                ],
                "resource": "aws_iam_policy_document.policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.data.aws.IAMWriteAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_41",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "provider \"aws\" {\n"
                    ],
                    [
                        8,
                        "  alias      = \"plain_text_access_keys_provider\"\n"
                    ],
                    [
                        9,
                        "  region     = \"us-west-1\"\n"
                    ],
                    [
                        10,
                        "  access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        11,
                        "  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        12,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/providers.tf",
                "repo_file_path": "/terraform/aws/providers.tf",
                "file_line_range": [
                    7,
                    12
                ],
                "resource": "aws.plain_text_access_keys_provider",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_79",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_instance\" \"web_host\" {\n"
                    ],
                    [
                        2,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        3,
                        "  ami           = \"${var.ami}\"\n"
                    ],
                    [
                        4,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        7,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        8,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        9,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        10,
                        "#! /bin/bash\n"
                    ],
                    [
                        11,
                        "sudo apt-get update\n"
                    ],
                    [
                        12,
                        "sudo apt-get install -y apache2\n"
                    ],
                    [
                        13,
                        "sudo systemctl start apache2\n"
                    ],
                    [
                        14,
                        "sudo systemctl enable apache2\n"
                    ],
                    [
                        15,
                        "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                    ],
                    [
                        16,
                        "export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                    ],
                    [
                        17,
                        "export AWS_DEFAULT_REGION=us-west-2\n"
                    ],
                    [
                        18,
                        "echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                    ],
                    [
                        19,
                        "EOF\n"
                    ],
                    [
                        20,
                        "  tags = {\n"
                    ],
                    [
                        21,
                        "    Name = \"${local.resource_prefix.value}-ec2\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    1,
                    23
                ],
                "resource": "aws_instance.web_host",
                "evaluations": {
                    "ami": {
                        "var_file": "consts.tf",
                        "value": "ami-09a5b0b7edf08843d",
                        "definitions": [
                            {
                                "definition_name": "ami",
                                "definition_expression": "${var.ami}",
                                "definition_path": "resource/0/aws_instance/web_host/ami/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_instance\" \"web_host\" {\n"
                    ],
                    [
                        2,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        3,
                        "  ami           = \"${var.ami}\"\n"
                    ],
                    [
                        4,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        7,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        8,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        9,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        10,
                        "#! /bin/bash\n"
                    ],
                    [
                        11,
                        "sudo apt-get update\n"
                    ],
                    [
                        12,
                        "sudo apt-get install -y apache2\n"
                    ],
                    [
                        13,
                        "sudo systemctl start apache2\n"
                    ],
                    [
                        14,
                        "sudo systemctl enable apache2\n"
                    ],
                    [
                        15,
                        "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                    ],
                    [
                        16,
                        "export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                    ],
                    [
                        17,
                        "export AWS_DEFAULT_REGION=us-west-2\n"
                    ],
                    [
                        18,
                        "echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                    ],
                    [
                        19,
                        "EOF\n"
                    ],
                    [
                        20,
                        "  tags = {\n"
                    ],
                    [
                        21,
                        "    Name = \"${local.resource_prefix.value}-ec2\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    1,
                    23
                ],
                "resource": "aws_instance.web_host",
                "evaluations": {
                    "ami": {
                        "var_file": "consts.tf",
                        "value": "ami-09a5b0b7edf08843d",
                        "definitions": [
                            {
                                "definition_name": "ami",
                                "definition_expression": "${var.ami}",
                                "definition_path": "resource/0/aws_instance/web_host/ami/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_46",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_instance\" \"web_host\" {\n"
                    ],
                    [
                        2,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        3,
                        "  ami           = \"${var.ami}\"\n"
                    ],
                    [
                        4,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        7,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        8,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        9,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        10,
                        "#! /bin/bash\n"
                    ],
                    [
                        11,
                        "sudo apt-get update\n"
                    ],
                    [
                        12,
                        "sudo apt-get install -y apache2\n"
                    ],
                    [
                        13,
                        "sudo systemctl start apache2\n"
                    ],
                    [
                        14,
                        "sudo systemctl enable apache2\n"
                    ],
                    [
                        15,
                        "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                    ],
                    [
                        16,
                        "export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                    ],
                    [
                        17,
                        "export AWS_DEFAULT_REGION=us-west-2\n"
                    ],
                    [
                        18,
                        "echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                    ],
                    [
                        19,
                        "EOF\n"
                    ],
                    [
                        20,
                        "  tags = {\n"
                    ],
                    [
                        21,
                        "    Name = \"${local.resource_prefix.value}-ec2\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    1,
                    23
                ],
                "resource": "aws_instance.web_host",
                "evaluations": {
                    "ami": {
                        "var_file": "consts.tf",
                        "value": "ami-09a5b0b7edf08843d",
                        "definitions": [
                            {
                                "definition_name": "ami",
                                "definition_expression": "${var.ami}",
                                "definition_path": "resource/0/aws_instance/web_host/ami/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_3",
                "check_name": "Ensure all data stored in the EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encrypted"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_ebs_volume\" \"web_host_storage\" {\n"
                    ],
                    [
                        26,
                        "  # unencrypted volume\n"
                    ],
                    [
                        27,
                        "  availability_zone = \"${var.availability_zone}\"\n"
                    ],
                    [
                        28,
                        "  #encrypted         = false  # Setting this causes the volume to be recreated on apply \n"
                    ],
                    [
                        29,
                        "  size = 1\n"
                    ],
                    [
                        30,
                        "  tags = {\n"
                    ],
                    [
                        31,
                        "    Name = \"${local.resource_prefix.value}-ebs\"\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    25,
                    33
                ],
                "resource": "aws_ebs_volume.web_host_storage",
                "evaluations": {
                    "availability_zone": {
                        "var_file": "consts.tf",
                        "value": "us-west-2a",
                        "definitions": [
                            {
                                "definition_name": "availability_zone",
                                "definition_expression": "${var.availability_zone}",
                                "definition_path": "resource/1/aws_ebs_volume/web_host_storage/availability_zone/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-ebs"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_3-encrypt-eps-volume"
            },
            {
                "check_id": "CKV_AWS_24",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ingress/[1]/from_port",
                        "ingress/[1]/to_port",
                        "ingress/[1]/cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        50,
                        "resource \"aws_security_group\" \"web-node\" {\n"
                    ],
                    [
                        51,
                        "  # security group is open to the world in SSH port\n"
                    ],
                    [
                        52,
                        "  name        = \"${local.resource_prefix.value}-sg\"\n"
                    ],
                    [
                        53,
                        "  description = \"${local.resource_prefix.value} Security Group\"\n"
                    ],
                    [
                        54,
                        "  vpc_id      = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  ingress {\n"
                    ],
                    [
                        57,
                        "    from_port = 80\n"
                    ],
                    [
                        58,
                        "    to_port   = 80\n"
                    ],
                    [
                        59,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        60,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        61,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        62,
                        "  }\n"
                    ],
                    [
                        63,
                        "  ingress {\n"
                    ],
                    [
                        64,
                        "    from_port = 22\n"
                    ],
                    [
                        65,
                        "    to_port   = 22\n"
                    ],
                    [
                        66,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        67,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        68,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        69,
                        "  }\n"
                    ],
                    [
                        70,
                        "  egress {\n"
                    ],
                    [
                        71,
                        "    from_port = 0\n"
                    ],
                    [
                        72,
                        "    to_port   = 0\n"
                    ],
                    [
                        73,
                        "    protocol  = \"-1\"\n"
                    ],
                    [
                        74,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        75,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        76,
                        "  }\n"
                    ],
                    [
                        77,
                        "  depends_on = [aws_vpc.web_vpc]\n"
                    ],
                    [
                        78,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    50,
                    78
                ],
                "resource": "aws_security_group.web-node",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/mfa_delete"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ec2.tf",
                "repo_file_path": "/terraform/aws/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-flowlogs",
                    "Environment": "${local.resource_prefix.value}"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_51",
                "check_name": "Ensure ECR Image Tags are immutable",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "image_tag_mutability"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource aws_ecr_repository \"repository\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"${local.resource_prefix.value}-repository\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"${local.resource_prefix.value}-repository\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ecr.tf",
                "repo_file_path": "/terraform/aws/ecr.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.repository",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-repository"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_24"
            },
            {
                "check_id": "CKV_AWS_33",
                "check_name": "Ensure ECR image scanning on push is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "image_scanning_configuration/[0]/scan_on_push"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource aws_ecr_repository \"repository\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"${local.resource_prefix.value}-repository\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"${local.resource_prefix.value}-repository\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/aws/ecr.tf",
                "repo_file_path": "/terraform/aws/ecr.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.repository",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${local.resource_prefix.value}-repository"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_8"
            },
            {
                "check_id": "CKV_GCP_26",
                "check_name": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "log_config"
                    ]
                },
                "code_block": [
                    [
                        7,
                        "resource \"google_compute_subnetwork\" \"public-subnetwork\" {\n"
                    ],
                    [
                        8,
                        "  name          = \"terragoat-${var.environment}-public-subnetwork\"\n"
                    ],
                    [
                        9,
                        "  ip_cidr_range = \"10.0.0.0/24\"\n"
                    ],
                    [
                        10,
                        "  region        = var.region\n"
                    ],
                    [
                        11,
                        "  network       = google_compute_network.vpc.id\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "  secondary_ip_range {\n"
                    ],
                    [
                        14,
                        "    range_name    = \"tf-test-secondary-range-update1\"\n"
                    ],
                    [
                        15,
                        "    ip_cidr_range = \"192.168.10.0/24\"\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/networks.tf",
                "repo_file_path": "/terraform/gcp/networks.tf",
                "file_line_range": [
                    7,
                    17
                ],
                "resource": "google_compute_subnetwork.public-subnetwork",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-public-subnetwork",
                                "definition_path": "resource/1/google_compute_subnetwork/public-subnetwork/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/1/google_compute_subnetwork/public-subnetwork/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleSubnetworkLoggingEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_logging_1"
            },
            {
                "check_id": "CKV_GCP_2",
                "check_name": "Ensure Google compute firewall ingress does not allow unrestricted ssh access",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "resource \"google_compute_firewall\" \"allow_all\" {\n"
                    ],
                    [
                        20,
                        "  name          = \"terragoat-${var.environment}-firewall\"\n"
                    ],
                    [
                        21,
                        "  network       = google_compute_network.vpc.id\n"
                    ],
                    [
                        22,
                        "  source_ranges = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        23,
                        "  allow {\n"
                    ],
                    [
                        24,
                        "    protocol = \"tcp\"\n"
                    ],
                    [
                        25,
                        "    ports    = [\"0-65535\"]\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/networks.tf",
                "repo_file_path": "/terraform/gcp/networks.tf",
                "file_line_range": [
                    19,
                    27
                ],
                "resource": "google_compute_firewall.allow_all",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-firewall",
                                "definition_path": "resource/2/google_compute_firewall/allow_all/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeFirewallUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_1"
            },
            {
                "check_id": "CKV_GCP_3",
                "check_name": "Ensure Google compute firewall ingress does not allow unrestricted rdp access",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        19,
                        "resource \"google_compute_firewall\" \"allow_all\" {\n"
                    ],
                    [
                        20,
                        "  name          = \"terragoat-${var.environment}-firewall\"\n"
                    ],
                    [
                        21,
                        "  network       = google_compute_network.vpc.id\n"
                    ],
                    [
                        22,
                        "  source_ranges = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        23,
                        "  allow {\n"
                    ],
                    [
                        24,
                        "    protocol = \"tcp\"\n"
                    ],
                    [
                        25,
                        "    ports    = [\"0-65535\"]\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/networks.tf",
                "repo_file_path": "/terraform/gcp/networks.tf",
                "file_line_range": [
                    19,
                    27
                ],
                "resource": "google_compute_firewall.allow_all",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-firewall",
                                "definition_path": "resource/2/google_compute_firewall/allow_all/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeFirewallUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_2"
            },
            {
                "check_id": "CKV_GCP_32",
                "check_name": "Ensure 'Block Project-wide SSH keys' is enabled for VM instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata/block-project-ssh-keys"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComupteBlockProjectSSH",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_8"
            },
            {
                "check_id": "CKV_GCP_38",
                "check_name": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeBootDiskEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/encrypt-boot-disks-for-instances-with-cseks"
            },
            {
                "check_id": "CKV_GCP_30",
                "check_name": "Ensure that instances are not configured to use the default service account",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeDefaultServiceAccount",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_iam_1"
            },
            {
                "check_id": "CKV_GCP_36",
                "check_name": "Ensure that IP forwarding is not enabled on Instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "can_ip_forward"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeIPForward",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_12"
            },
            {
                "check_id": "CKV_GCP_34",
                "check_name": "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in project metadata for all instances)",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata/[0]/enable-oslogin"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeInstanceOSLogin",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_10"
            },
            {
                "check_id": "CKV_GCP_35",
                "check_name": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata/[0]/serial-port-enable"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeSerialPorts",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_11"
            },
            {
                "check_id": "CKV_GCP_39",
                "check_name": "Ensure Compute instances are launched with Shielded VM enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        3,
                        "resource google_compute_instance \"server\" {\n"
                    ],
                    [
                        4,
                        "  machine_type = \"n1-standard-1\"\n"
                    ],
                    [
                        5,
                        "  name         = \"terragoat-${var.environment}-machine\"\n"
                    ],
                    [
                        6,
                        "  zone         = data.google_compute_zones.zones.names[0]\n"
                    ],
                    [
                        7,
                        "  boot_disk {\n"
                    ],
                    [
                        8,
                        "    initialize_params {\n"
                    ],
                    [
                        9,
                        "      image = \"debian-cloud/debian-9\"\n"
                    ],
                    [
                        10,
                        "    }\n"
                    ],
                    [
                        11,
                        "    auto_delete = true\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "  network_interface {\n"
                    ],
                    [
                        14,
                        "    subnetwork = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        15,
                        "    access_config {}\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "  can_ip_forward = true\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  metadata = {\n"
                    ],
                    [
                        20,
                        "    block-project-ssh-keys = false\n"
                    ],
                    [
                        21,
                        "    enable-oslogin         = false\n"
                    ],
                    [
                        22,
                        "    serial-port-enable     = true\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    3,
                    24
                ],
                "resource": "google_compute_instance.server",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-machine",
                                "definition_path": "resource/0/google_compute_instance/server/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeShieldedVM",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_general_y"
            },
            {
                "check_id": "CKV_GCP_37",
                "check_name": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "disk_encryption_key"
                    ]
                },
                "code_block": [
                    [
                        26,
                        "resource google_compute_disk \"unencrypted_disk\" {\n"
                    ],
                    [
                        27,
                        "  name = \"terragoat-${var.environment}-disk\"\n"
                    ],
                    [
                        28,
                        "}"
                    ]
                ],
                "file_path": "/terraform/gcp/instances.tf",
                "repo_file_path": "/terraform/gcp/instances.tf",
                "file_line_range": [
                    26,
                    28
                ],
                "resource": "google_compute_disk.unencrypted_disk",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-disk",
                                "definition_path": "resource/1/google_compute_disk/unencrypted_disk/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleComputeDiskEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_general_x"
            },
            {
                "check_id": "CKV_GCP_6",
                "check_name": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "settings/[0]/ip_configuration/[0]/require_ssl/[0]"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudSqlDatabaseRequireSsl",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_general_1"
            },
            {
                "check_id": "CKV_GCP_11",
                "check_name": "Ensure that Cloud SQL database Instances are not open to the world",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudSqlDatabasePublicallyAccessible",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_networking_4"
            },
            {
                "check_id": "CKV_GCP_14",
                "check_name": "Ensure all Cloud SQL database instance have backup configuration enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "settings/[0]/backup_configuration/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource google_sql_database_instance \"master_instance\" {\n"
                    ],
                    [
                        2,
                        "  name             = \"terragoat-${var.environment}-master\"\n"
                    ],
                    [
                        3,
                        "  database_version = \"POSTGRES_11\"\n"
                    ],
                    [
                        4,
                        "  region           = var.region\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  settings {\n"
                    ],
                    [
                        7,
                        "    tier = \"db-f1-micro\"\n"
                    ],
                    [
                        8,
                        "    ip_configuration {\n"
                    ],
                    [
                        9,
                        "      ipv4_enabled = true\n"
                    ],
                    [
                        10,
                        "      authorized_networks {\n"
                    ],
                    [
                        11,
                        "        name  = \"WWW\"\n"
                    ],
                    [
                        12,
                        "        value = \"0.0.0.0/0\"\n"
                    ],
                    [
                        13,
                        "      }\n"
                    ],
                    [
                        14,
                        "    }\n"
                    ],
                    [
                        15,
                        "    backup_configuration {\n"
                    ],
                    [
                        16,
                        "      enabled = false\n"
                    ],
                    [
                        17,
                        "    }\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "google_sql_database_instance.master_instance",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-master",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/name/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_sql_database_instance/master_instance/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleCloudSqlBackupConfiguration",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_general_2"
            },
            {
                "check_id": "CKV_GCP_15",
                "check_name": "Ensure that BigQuery datasets are not anonymously or publicly accessible",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        21,
                        "resource google_bigquery_dataset \"dataset\" {\n"
                    ],
                    [
                        22,
                        "  dataset_id = \"terragoat_${var.environment}_dataset\"\n"
                    ],
                    [
                        23,
                        "  access {\n"
                    ],
                    [
                        24,
                        "    special_group = \"allAuthenticatedUsers\"\n"
                    ],
                    [
                        25,
                        "    role          = \"READER\"\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "}"
                    ]
                ],
                "file_path": "/terraform/gcp/big_data.tf",
                "repo_file_path": "/terraform/gcp/big_data.tf",
                "file_line_range": [
                    21,
                    27
                ],
                "resource": "google_bigquery_dataset.dataset",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat_${var.environment}_dataset",
                                "definition_path": "resource/1/google_bigquery_dataset/dataset/dataset_id/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleBigQueryDatasetPublicACL",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_general_3"
            },
            {
                "check_id": "CKV_GCP_29",
                "check_name": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "uniform_bucket_level_access"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"google_storage_bucket\" \"terragoat_website\" {\n"
                    ],
                    [
                        2,
                        "  name          = \"terragot-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  force_destroy = true\n"
                    ],
                    [
                        4,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gcs.tf",
                "repo_file_path": "/terraform/gcp/gcs.tf",
                "file_line_range": [
                    1,
                    4
                ],
                "resource": "google_storage_bucket.terragoat_website",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragot-${var.environment}",
                                "definition_path": "resource/0/google_storage_bucket/terragoat_website/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleStorageBucketUniformAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_gcs_2"
            },
            {
                "check_id": "CKV_GCP_62",
                "check_name": "Bucket should log access",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"google_storage_bucket\" \"terragoat_website\" {\n"
                    ],
                    [
                        2,
                        "  name          = \"terragot-${var.environment}\"\n"
                    ],
                    [
                        3,
                        "  force_destroy = true\n"
                    ],
                    [
                        4,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gcs.tf",
                "repo_file_path": "/terraform/gcp/gcs.tf",
                "file_line_range": [
                    1,
                    4
                ],
                "resource": "google_storage_bucket.terragoat_website",
                "evaluations": {
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragot-${var.environment}",
                                "definition_path": "resource/0/google_storage_bucket/terragoat_website/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.CloudStorageLogging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_logging_2"
            },
            {
                "check_id": "CKV_GCP_28",
                "check_name": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {\n"
                    ],
                    [
                        7,
                        "  bucket  = google_storage_bucket.terragoat_website.id\n"
                    ],
                    [
                        8,
                        "  members = [\"allUsers\"]\n"
                    ],
                    [
                        9,
                        "  role    = \"roles/storage.objectViewer\"\n"
                    ],
                    [
                        10,
                        "}"
                    ]
                ],
                "file_path": "/terraform/gcp/gcs.tf",
                "repo_file_path": "/terraform/gcp/gcs.tf",
                "file_line_range": [
                    6,
                    10
                ],
                "resource": "google_storage_bucket_iam_binding.allow_public_read",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.gcp.GoogleStorageBucketNotPublic",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_public_1"
            },
            {
                "check_id": "CKV_GCP_25",
                "check_name": "Ensure Kubernetes Cluster is created with Private cluster enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "private_cluster_config"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEPrivateClusterConfig",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_6"
            },
            {
                "check_id": "CKV_GCP_18",
                "check_name": "Ensure GKE Control Plane is not public",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEPublicControlPlane",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_10"
            },
            {
                "check_id": "CKV_GCP_21",
                "check_name": "Ensure Kubernetes Clusters are configured with Labels",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEHasLabels",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_13"
            },
            {
                "check_id": "CKV_GCP_7",
                "check_name": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_legacy_abac"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEDisableLegacyAuth",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_2"
            },
            {
                "check_id": "CKV_GCP_12",
                "check_name": "Ensure Network Policy is enabled on Kubernetes Engine Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "network_policy/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKENetworkPolicyEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_7"
            },
            {
                "check_id": "CKV_GCP_23",
                "check_name": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ip_allocation_policy"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEAliasIpEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_15"
            },
            {
                "check_id": "CKV_GCP_24",
                "check_name": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "pod_security_policy_config/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEPodSecurityPolicyEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_9"
            },
            {
                "check_id": "CKV_GCP_19",
                "check_name": "Ensure GKE basic auth is disabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEBasicAuth",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_11"
            },
            {
                "check_id": "CKV_GCP_8",
                "check_name": "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring_service/0"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_3"
            },
            {
                "check_id": "CKV_GCP_13",
                "check_name": "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "master_auth/[0]/client_certificate_config/[0]/issue_client_certificate/[0]"
                    ]
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEClientCertificateEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_8"
            },
            {
                "check_id": "CKV_GCP_1",
                "check_name": "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        6,
                        "resource \"google_container_cluster\" \"workload_cluster\" {\n"
                    ],
                    [
                        7,
                        "  name               = \"terragoat-${var.environment}-cluster\"\n"
                    ],
                    [
                        8,
                        "  logging_service    = \"none\"\n"
                    ],
                    [
                        9,
                        "  location           = var.region\n"
                    ],
                    [
                        10,
                        "  initial_node_count = 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  enable_legacy_abac       = true\n"
                    ],
                    [
                        13,
                        "  monitoring_service       = \"none\"\n"
                    ],
                    [
                        14,
                        "  remove_default_node_pool = true\n"
                    ],
                    [
                        15,
                        "  network                  = google_compute_network.vpc.name\n"
                    ],
                    [
                        16,
                        "  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n"
                    ],
                    [
                        17,
                        "  master_authorized_networks_config {\n"
                    ],
                    [
                        18,
                        "    cidr_blocks {\n"
                    ],
                    [
                        19,
                        "      cidr_block = \"0.0.0.0/0\"\n"
                    ],
                    [
                        20,
                        "    }\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    6,
                    22
                ],
                "resource": "google_container_cluster.workload_cluster",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/location/0"
                            }
                        ]
                    },
                    "environment": {
                        "var_file": "variables.tf",
                        "value": "dev",
                        "definitions": [
                            {
                                "definition_name": "environment",
                                "definition_expression": "terragoat-${var.environment}-cluster",
                                "definition_path": "resource/0/google_container_cluster/workload_cluster/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEClusterLogging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_1"
            },
            {
                "check_id": "CKV_GCP_9",
                "check_name": "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "management/[0]/auto_repair/[0]"
                    ]
                },
                "code_block": [
                    [
                        24,
                        "resource google_container_node_pool \"custom_node_pool\" {\n"
                    ],
                    [
                        25,
                        "  cluster  = google_container_cluster.workload_cluster.name\n"
                    ],
                    [
                        26,
                        "  location = var.region\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  node_config {\n"
                    ],
                    [
                        29,
                        "    image_type = \"Ubuntu\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    24,
                    31
                ],
                "resource": "google_container_node_pool.custom_node_pool",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/1/google_container_node_pool/custom_node_pool/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKENodePoolAutoRepairEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_4"
            },
            {
                "check_id": "CKV_GCP_10",
                "check_name": "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "management/[0]/auto_upgrade/[0]"
                    ]
                },
                "code_block": [
                    [
                        24,
                        "resource google_container_node_pool \"custom_node_pool\" {\n"
                    ],
                    [
                        25,
                        "  cluster  = google_container_cluster.workload_cluster.name\n"
                    ],
                    [
                        26,
                        "  location = var.region\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  node_config {\n"
                    ],
                    [
                        29,
                        "    image_type = \"Ubuntu\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    24,
                    31
                ],
                "resource": "google_container_node_pool.custom_node_pool",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/1/google_container_node_pool/custom_node_pool/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKENodePoolAutoUpgradeEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_5"
            },
            {
                "check_id": "CKV_GCP_22",
                "check_name": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        24,
                        "resource google_container_node_pool \"custom_node_pool\" {\n"
                    ],
                    [
                        25,
                        "  cluster  = google_container_cluster.workload_cluster.name\n"
                    ],
                    [
                        26,
                        "  location = var.region\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  node_config {\n"
                    ],
                    [
                        29,
                        "    image_type = \"Ubuntu\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/gcp/gke.tf",
                "repo_file_path": "/terraform/gcp/gke.tf",
                "file_line_range": [
                    24,
                    31
                ],
                "resource": "google_container_node_pool.custom_node_pool",
                "evaluations": {
                    "region": {
                        "var_file": "variables.tf",
                        "value": "us-central1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "resource/1/google_container_node_pool/custom_node_pool/location/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.gcp.GKEUseCosImage",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_14"
            }
        ],
        "skipped_checks": [],
        "parsing_errors": []
    },
    "summary": {
        "passed": 88,
        "failed": 127,
        "skipped": 0,
        "parsing_errors": 0,
        "checkov_version": "1.0.844"
    }
}
